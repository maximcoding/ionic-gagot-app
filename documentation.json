{
    "pipes": [],
    "interfaces": [
        {
            "name": "IAddress",
            "id": "interface-IAddress-5bec673d070b7967eb1735091752ec9a2f63507aa95f37479a7879a8e50f873ed863c217ed0fac050e50a2cb95b7cee595166990d89ead7240369a6874076db7",
            "file": "src/app/shared/interfaces/address.intefrace.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IAddress {\n  street: string;\n  building: number;\n  postalCode: string;\n  country: string;\n  city: string;\n  lat: string;\n  lng: string;\n  description: string;\n  stateProvince: string;\n}\n",
            "properties": [
                {
                    "name": "building",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "city",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "country",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "lat",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "lng",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "postalCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "stateProvince",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "street",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ICategory",
            "id": "interface-ICategory-4275b1c966758b0259069d665e38f475356944c8fbaf52f7727e0bc6da9b6bbeb628edb135e7c411ab93499ff12321767028bd19f3c97609166680df2d0d9476",
            "file": "src/app/shared/interfaces/category.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ICategory {\n  name: string;\n  description: string;\n  createdAt: string;\n}\n",
            "properties": [
                {
                    "name": "createdAt",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ICategory",
            "id": "interface-ICategory-3461836992cbc030f0949afd2458c484ba6e4fa1045dd6a8c9f1757cfcf052e1a640a94d9ba7ca37cd96fb3eb555a684611710e236d599d1af2c930e0f439bed-1",
            "file": "src/app/shared/components/categories/categories.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {categories} from './categories.data';\nimport {Color} from '../../enums';\n\nexport interface ICategory {\n  title?: string;\n  size?: string;\n  icon?: string;\n  selected?: boolean;\n}\n\n@Component({\n  selector: 'mx-categories',\n  templateUrl: './categories.component.html',\n  styleUrls: ['./categories.component.scss'],\n})\nexport class CategoriesComponent implements OnInit {\n\n\n  @Input() categories = categories;\n  @Input() inRow: boolean;\n  @Output() onClick: EventEmitter<any> = new EventEmitter<any>();\n  public Color = Color;\n  private selected: ICategory;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  public onCategoryChange($event) {\n    this.selected = $event.detail.value;\n    this.onClick.emit($event)\n  }\n\n}\n",
            "properties": [
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "selected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "ICategory-1"
        },
        {
            "name": "IClickStepEvent",
            "id": "interface-IClickStepEvent-d090be2294a2d5ef320acef0726b628132ae5d4403761d6701515109149e3734cd8a101f2eb97a46676316fad8f5a72e2e21151a5d4a9573d6905762dcfad919",
            "file": "src/app/shared/components/progress-bar/progress-bar.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Color, IconSize} from '../../enums';\nimport {StateService, StateType} from '../../services/state.service';\nimport {Utils} from '../../../../utils';\n\nexport enum ProgressBarPosition {\n  horizontalTop = 'top',\n  horizontalBottom = 'bottom',\n  verticalLeft = 'left',\n  verticalRight = 'right'\n}\n\n\nexport interface IProgressBarConfig {\n  position?: ProgressBarPosition;\n  size?: number;\n  borderColor?: Color | string;\n  selectedColor?: Color | string;\n  icon?: string;\n  fontSize?: number;\n  fontWeight?: number;\n  titlePosition?: ProgressBarPosition;\n}\n\nexport interface IProgressBarStep {\n  title?: string;\n  state?: StateType;\n  active?: boolean;\n  disabled?: boolean;\n  visible?: boolean;\n  borderColor?: Color;\n  icon?: string;\n  size?: IconSize | number;\n  click?: any;\n}\n\nexport interface IClickStepEvent {\n  event: any;\n  step: IProgressBarStep;\n}\n\n@Component({\n  selector: 'mx-progress-bar',\n  templateUrl: './progress-bar.component.html',\n  styleUrls: ['./progress-bar.component.scss'],\n})\nexport class ProgressBarComponent implements OnInit {\n\n  @Input() config: IProgressBarConfig;\n  @Input() steps: IProgressBarStep[];\n\n  @Output() onClick: EventEmitter<IClickStepEvent> = new EventEmitter<IClickStepEvent>();\n\n  constructor(private stateService: StateService) {\n  }\n\n  ngOnInit() {\n  }\n\n  public backgroundColor(step: IProgressBarStep): Color {\n    return this.stateService.stateBackgroundColor(step.state);\n  }\n\n  public iconColor(step: IProgressBarStep): Color {\n    return this.stateService.stateTextColor(step.state);\n  }\n\n  private getActiveIndex(): number {\n    return this.steps.findIndex(step => !!step.active) || 0;\n  }\n\n  public get value() {\n    const doneCount = this.getActiveIndex() + 1;\n    return Utils.roundNumber(doneCount / this.steps.length, 1);\n  }\n\n  public get activeStep(): IProgressBarStep {\n    return this.steps.find(s => s.active);\n  }\n\n  public clickHandler(event, step: IProgressBarStep) {\n    this.onClick.emit({event, step});\n  }\n\n}\n",
            "properties": [
                {
                    "name": "event",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "step",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IProgressBarStep",
                    "optional": false,
                    "description": "",
                    "line": 39
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "IProgressBarConfig",
            "id": "interface-IProgressBarConfig-d090be2294a2d5ef320acef0726b628132ae5d4403761d6701515109149e3734cd8a101f2eb97a46676316fad8f5a72e2e21151a5d4a9573d6905762dcfad919",
            "file": "src/app/shared/components/progress-bar/progress-bar.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Color, IconSize} from '../../enums';\nimport {StateService, StateType} from '../../services/state.service';\nimport {Utils} from '../../../../utils';\n\nexport enum ProgressBarPosition {\n  horizontalTop = 'top',\n  horizontalBottom = 'bottom',\n  verticalLeft = 'left',\n  verticalRight = 'right'\n}\n\n\nexport interface IProgressBarConfig {\n  position?: ProgressBarPosition;\n  size?: number;\n  borderColor?: Color | string;\n  selectedColor?: Color | string;\n  icon?: string;\n  fontSize?: number;\n  fontWeight?: number;\n  titlePosition?: ProgressBarPosition;\n}\n\nexport interface IProgressBarStep {\n  title?: string;\n  state?: StateType;\n  active?: boolean;\n  disabled?: boolean;\n  visible?: boolean;\n  borderColor?: Color;\n  icon?: string;\n  size?: IconSize | number;\n  click?: any;\n}\n\nexport interface IClickStepEvent {\n  event: any;\n  step: IProgressBarStep;\n}\n\n@Component({\n  selector: 'mx-progress-bar',\n  templateUrl: './progress-bar.component.html',\n  styleUrls: ['./progress-bar.component.scss'],\n})\nexport class ProgressBarComponent implements OnInit {\n\n  @Input() config: IProgressBarConfig;\n  @Input() steps: IProgressBarStep[];\n\n  @Output() onClick: EventEmitter<IClickStepEvent> = new EventEmitter<IClickStepEvent>();\n\n  constructor(private stateService: StateService) {\n  }\n\n  ngOnInit() {\n  }\n\n  public backgroundColor(step: IProgressBarStep): Color {\n    return this.stateService.stateBackgroundColor(step.state);\n  }\n\n  public iconColor(step: IProgressBarStep): Color {\n    return this.stateService.stateTextColor(step.state);\n  }\n\n  private getActiveIndex(): number {\n    return this.steps.findIndex(step => !!step.active) || 0;\n  }\n\n  public get value() {\n    const doneCount = this.getActiveIndex() + 1;\n    return Utils.roundNumber(doneCount / this.steps.length, 1);\n  }\n\n  public get activeStep(): IProgressBarStep {\n    return this.steps.find(s => s.active);\n  }\n\n  public clickHandler(event, step: IProgressBarStep) {\n    this.onClick.emit({event, step});\n  }\n\n}\n",
            "properties": [
                {
                    "name": "borderColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Color | string",
                    "optional": true,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "fontSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "fontWeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "position",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProgressBarPosition",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "selectedColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Color | string",
                    "optional": true,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "titlePosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProgressBarPosition",
                    "optional": true,
                    "description": "",
                    "line": 22
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "IProgressBarStep",
            "id": "interface-IProgressBarStep-d090be2294a2d5ef320acef0726b628132ae5d4403761d6701515109149e3734cd8a101f2eb97a46676316fad8f5a72e2e21151a5d4a9573d6905762dcfad919",
            "file": "src/app/shared/components/progress-bar/progress-bar.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Color, IconSize} from '../../enums';\nimport {StateService, StateType} from '../../services/state.service';\nimport {Utils} from '../../../../utils';\n\nexport enum ProgressBarPosition {\n  horizontalTop = 'top',\n  horizontalBottom = 'bottom',\n  verticalLeft = 'left',\n  verticalRight = 'right'\n}\n\n\nexport interface IProgressBarConfig {\n  position?: ProgressBarPosition;\n  size?: number;\n  borderColor?: Color | string;\n  selectedColor?: Color | string;\n  icon?: string;\n  fontSize?: number;\n  fontWeight?: number;\n  titlePosition?: ProgressBarPosition;\n}\n\nexport interface IProgressBarStep {\n  title?: string;\n  state?: StateType;\n  active?: boolean;\n  disabled?: boolean;\n  visible?: boolean;\n  borderColor?: Color;\n  icon?: string;\n  size?: IconSize | number;\n  click?: any;\n}\n\nexport interface IClickStepEvent {\n  event: any;\n  step: IProgressBarStep;\n}\n\n@Component({\n  selector: 'mx-progress-bar',\n  templateUrl: './progress-bar.component.html',\n  styleUrls: ['./progress-bar.component.scss'],\n})\nexport class ProgressBarComponent implements OnInit {\n\n  @Input() config: IProgressBarConfig;\n  @Input() steps: IProgressBarStep[];\n\n  @Output() onClick: EventEmitter<IClickStepEvent> = new EventEmitter<IClickStepEvent>();\n\n  constructor(private stateService: StateService) {\n  }\n\n  ngOnInit() {\n  }\n\n  public backgroundColor(step: IProgressBarStep): Color {\n    return this.stateService.stateBackgroundColor(step.state);\n  }\n\n  public iconColor(step: IProgressBarStep): Color {\n    return this.stateService.stateTextColor(step.state);\n  }\n\n  private getActiveIndex(): number {\n    return this.steps.findIndex(step => !!step.active) || 0;\n  }\n\n  public get value() {\n    const doneCount = this.getActiveIndex() + 1;\n    return Utils.roundNumber(doneCount / this.steps.length, 1);\n  }\n\n  public get activeStep(): IProgressBarStep {\n    return this.steps.find(s => s.active);\n  }\n\n  public clickHandler(event, step: IProgressBarStep) {\n    this.onClick.emit({event, step});\n  }\n\n}\n",
            "properties": [
                {
                    "name": "active",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "borderColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Color",
                    "optional": true,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "click",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconSize | number",
                    "optional": true,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StateType",
                    "optional": true,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "visible",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 30
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "IPropertyDetails",
            "id": "interface-IPropertyDetails-2e3e8e0d8202743d90eafdc2fd9027a004f030e3f8e75ea3bf9efd83e958bb93209788da51924248ec1bef76152edae7f212eb57231a1064a83c449ae9c4a68f",
            "file": "src/app/shared/interfaces/property.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export enum PropertyType {\n  Sell = 'sell',\n  Buy = 'buy'\n}\n\nexport interface IPropertyPreview {\n  title: string;\n  floors: number;\n  bedroom: number;\n  bathroom: number;\n  square: number;\n  type: PropertyType;\n  price: number;\n  place: string;\n  photoURLs: string;\n  videoURLs: string;\n  latitude: string;\n  longitude: string;\n  address: string;\n}\n\n\nexport interface IPropertyDetails extends IPropertyPreview {\n  description: string;\n  isApproved: boolean;\n  authorID: number;\n  categoryID: number;\n  geoHash: string;\n  newConstruction: boolean;\n  lastFloor: boolean;\n  floor: number;\n  kitchen?: number;\n  balcony?: number;\n  built: number;\n  phone: string;\n  agentID: number;\n  photo: string;\n  photoURLs: string;\n  nextTo: string[];\n  videoURLs: string;\n  open_doors: any;\n  delete: boolean;\n}\n",
            "properties": [
                {
                    "name": "agentID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "authorID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "balcony",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "built",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "categoryID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "delete",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "floor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "geoHash",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "isApproved",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "kitchen",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "lastFloor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "newConstruction",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "nextTo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "open_doors",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "phone",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "photo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "photoURLs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "videoURLs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 40
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "extends": "IPropertyPreview"
        },
        {
            "name": "IPropertyPreview",
            "id": "interface-IPropertyPreview-2e3e8e0d8202743d90eafdc2fd9027a004f030e3f8e75ea3bf9efd83e958bb93209788da51924248ec1bef76152edae7f212eb57231a1064a83c449ae9c4a68f",
            "file": "src/app/shared/interfaces/property.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export enum PropertyType {\n  Sell = 'sell',\n  Buy = 'buy'\n}\n\nexport interface IPropertyPreview {\n  title: string;\n  floors: number;\n  bedroom: number;\n  bathroom: number;\n  square: number;\n  type: PropertyType;\n  price: number;\n  place: string;\n  photoURLs: string;\n  videoURLs: string;\n  latitude: string;\n  longitude: string;\n  address: string;\n}\n\n\nexport interface IPropertyDetails extends IPropertyPreview {\n  description: string;\n  isApproved: boolean;\n  authorID: number;\n  categoryID: number;\n  geoHash: string;\n  newConstruction: boolean;\n  lastFloor: boolean;\n  floor: number;\n  kitchen?: number;\n  balcony?: number;\n  built: number;\n  phone: string;\n  agentID: number;\n  photo: string;\n  photoURLs: string;\n  nextTo: string[];\n  videoURLs: string;\n  open_doors: any;\n  delete: boolean;\n}\n",
            "properties": [
                {
                    "name": "address",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "bathroom",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "bedroom",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "floors",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "latitude",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "longitude",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "photoURLs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "place",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "price",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "square",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PropertyType",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "videoURLs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "UserInterface",
            "id": "interface-UserInterface-22a7d256f1446e19efe38dd862583de57b08e7185a09b69c2a716b5d8c0342b624fae2f4f512b2ab63787f6c83675389f31a2bcaf02266ac7adfb9726a431544",
            "file": "src/app/shared/interfaces/user.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { RoleEnum } from \"../enums\";\n\nexport interface UserInterface {\n  appIdentifier: string;\n  id: string;\n  userID: string;\n  role: RoleEnum;\n  createdAt: string;\n  created_at: string;\n  updatedAt: string;\n  email: string;\n  firstName: string;\n  lastName: string;\n  profilePictureURL: string;\n  signUpLocation: {\n    latitude: string;\n    longitude: string;\n  };\n  pushToken: string;\n  mobile: string;\n  phone: string;\n  location: any;\n  notifications: boolean;\n  isOnline: boolean;\n  lastOnlineTimestamp: string;\n}\n",
            "properties": [
                {
                    "name": "appIdentifier",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "created_at",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "createdAt",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "firstName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "isOnline",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "lastName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "lastOnlineTimestamp",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "location",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "mobile",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "notifications",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "phone",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "profilePictureURL",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "pushToken",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "role",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "RoleEnum",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "signUpLocation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "updatedAt",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "userID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "StateService",
            "id": "injectable-StateService-4a4dd1b003f4abe1bfcebdf8785a52562052d982c3ab0f3f0791ae6abe8746552e056a2b7c6b41013450e626bba8bd882a712ce6850da2e3501a906739082d92",
            "file": "src/app/shared/services/state.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "stateBackgroundColor",
                    "args": [
                        {
                            "name": "state",
                            "type": "StateType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "StateType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "stateTextColor",
                    "args": [
                        {
                            "name": "state",
                            "type": "StateType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "StateType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {Injectable} from '@angular/core';\nimport {Color} from '../enums';\n\nexport enum StateType {\n  initial = 'initial',\n  submitted = 'submitted',\n  invalid = 'invalid',\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StateService {\n\n  constructor() {\n  }\n\n\n  public stateBackgroundColor(state: StateType) {\n    switch (state) {\n      case StateType.submitted:\n        return Color.primary;\n      case StateType.invalid:\n        return Color.danger;\n      case StateType.initial:\n      default:\n        return Color.light;\n    }\n  }\n\n  public stateTextColor(state: StateType) {\n    switch (state) {\n      case StateType.submitted:\n      case StateType.invalid:\n        return Color.light;\n      case StateType.initial:\n      default:\n        return Color.secondary;\n    }\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 13
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "Utils",
            "id": "class-Utils-b0f213b3339911447c85350c6868eb1ac014653e702dcebf829708c15276f5b1b05d19792c24ce7a952a16ad7899598a205efc0023b8d3291d17ba25a6cd306c",
            "file": "src/utils.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class Utils {\n\n  static addRemoveListItem(items, item): any[] {\n    const found = items.findIndex(el => el === item);\n    if (found > 0) {\n      items.splice(found, 1);\n    } else {\n      items.push(item);\n    }\n    return items;\n  }\n\n  static roundNumber(value: number, decimals: number) {\n    decimals = decimals || 0;\n    return (Math.floor(value * Math.pow(10, decimals)) / Math.pow(10, decimals));\n  };\n\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "addRemoveListItem",
                    "args": [
                        {
                            "name": "items",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "item",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any[]",
                    "typeParameters": [],
                    "line": 3,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "items",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "item",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "roundNumber",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "decimals",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "decimals",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AddLocationComponent",
            "id": "component-AddLocationComponent-1fe7157fd65635a611354a92ecf9f8099a59acc07216b1def9cd9cd3520e6e42b86fb62a352866b81bdfe959bba2c6ab21de5949c1e9a231adb39a0b62fa1442",
            "file": "src/app/add-property/add-location/add-location.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mx-add-location",
            "styleUrls": [
                "./add-location.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./add-location.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "nextToList",
                    "defaultValue": "['Subway', 'Shop Mall', 'Garden', 'School', 'Dog Park', 'Sea', 'Theater']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "property",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IPropertyDetails",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "textType",
                    "defaultValue": "TextType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "confirm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "formatDate",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isNextToSelected",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onAddressInput",
                    "args": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onCategorySelect",
                    "args": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onNextToClick",
                    "args": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "reset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input, OnInit} from '@angular/core';\nimport {format, parseISO} from 'date-fns';\nimport {TextType} from '../../shared/components/text/text.component';\nimport {IPropertyDetails} from '../../shared/interfaces/property.interface';\nimport {Utils} from '../../../utils';\nimport {Route, Router} from '@angular/router';\n\n@Component({\n  selector: 'mx-add-location',\n  templateUrl: './add-location.component.html',\n  styleUrls: ['./add-location.component.scss'],\n})\nexport class AddLocationComponent implements OnInit {\n\n  property: IPropertyDetails;\n  public textType = TextType;\n  public nextToList = ['Subway', 'Shop Mall', 'Garden', 'School', 'Dog Park', 'Sea', 'Theater'];\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  public onCategorySelect($event) {\n    this.property.categoryID = $event;\n  }\n\n  public onAddressInput($event) {\n    this.property.address = $event;\n  }\n\n  public onNextToClick($event) {\n    this.property.nextTo = Utils.addRemoveListItem(this.property.nextTo, $event);\n  }\n\n  public isNextToSelected(name: string) {\n    this.property.nextTo.includes(name);\n  }\n\n\n  confirm() {\n    // this.datetime.confirm();\n  }\n\n  reset() {\n    // this.datetime.nativeEl.reset();\n  }\n\n  formatDate(value: string) {\n    return format(parseISO(value), 'MMM dd yyyy');\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./add-location.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 17
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"section\">\n  <mx-text [type]=\"textType.sectionTitle\" [title]=\"'TITLES.CATEGORIES' | translate\"></mx-text>\n  <ion-item>\n    <mx-categories class=\"ion-padding-vertical\" (onClick)=\"onCategorySelect($event)\"></mx-categories>\n  </ion-item>\n</div>\n\n<!--   Address & Map-->\n<div class=\"section\">\n  <ion-item>\n    <mx-text [type]=\"textType.sectionTitle\" [title]=\"'ADDRESS' | translate\"></mx-text>\n  </ion-item>\n  <mx-input [value]=\"property.address\"\n            [autocomplete]=\"true\"\n            [type]=\"'text'\"\n            (onChange)=\"onAddressInput($event)\"\n            [icon]=\"'locate-outline'\"\n            [placeholder]=\"'PLACEHOLDERS.ENTER_ADDRESS' | translate\"></mx-input>\n  <mx-map></mx-map>\n</div>\n\n<!--         Datetime in popover with input -->\n<!--  <div class=\"section\">-->\n<!--    <ion-item>-->\n<!--      <ion-button fill=\"clear\" id=\"open-date-input-2\">-->\n<!--        <ion-icon icon=\"calendar\"></ion-icon>-->\n<!--      </ion-button>-->\n<!--      <ion-popover trigger=\"open-date-input-2\" show-backdrop=\"false\">-->\n<!--        <ng-template>-->\n<!--          <ion-datetime-->\n<!--            #popoverDatetime2-->\n<!--            presentation=\"date\"-->\n<!--            (ionChange)=\"dateValue2 = formatDate(popoverDatetime2.value)\"-->\n<!--          ></ion-datetime>-->\n<!--        </ng-template>-->\n<!--      </ion-popover>-->\n<!--    </ion-item>-->\n<!--  </div>-->\n\n\n<div class=\"section\">\n  <mx-button-list\n    [values]=\"this.property.nextTo\"\n    [buttons]=\"nextToList\"\n    [title]=\"'NEXT_TO' | translate\"\n    (onClick)=\"onNextToClick($event)\"></mx-button-list>\n</div>\n"
        },
        {
            "name": "AddMediaComponent",
            "id": "component-AddMediaComponent-9431d4d1ffd258dbd97f75f557c5f381f479f989ab30109b933a076ae98c5732ec054173658aa0ce89ff3227825d03faedfa15caf2d78edd0a8a1fb52b068365",
            "file": "src/app/add-property/add-media/add-media.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mx-add-media",
            "styleUrls": [
                "./add-media.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./add-media.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'mx-add-media',\n  templateUrl: './add-media.component.html',\n  styleUrls: ['./add-media.component.scss'],\n})\nexport class AddMediaComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {}\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./add-media.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "MEDIA\n"
        },
        {
            "name": "AddOpenDoorEventComponent",
            "id": "component-AddOpenDoorEventComponent-f9763bab9366fb88248d1670e715a24f9dde6ad85fc16ec818b3edd36a1aa6087bf58f5c8a6fba63418151427fe1b9acebe71c21f1851657cc0f22f6f37053dd",
            "file": "src/app/add-property/add-open-door-event/add-open-door-event.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mx-add-open-door-event",
            "styleUrls": [
                "./add-open-door-event.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./add-open-door-event.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'mx-add-open-door-event',\n  templateUrl: './add-open-door-event.component.html',\n  styleUrls: ['./add-open-door-event.component.scss'],\n})\nexport class AddOpenDoorEventComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {}\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./add-open-door-event.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "OPEN DOOR EVENTS\n"
        },
        {
            "name": "AddPriceAndAgreementComponent",
            "id": "component-AddPriceAndAgreementComponent-6a2f8ca6029d58a3a4949149df8773121720fc9c387976413ea78385f45074f9bbef7b6c90f3115b56db1d280cb0ee79a710ee0112789347a8cdf4f1a892f305",
            "file": "src/app/add-property/add-price-and-agreement/add-price-and-agreement.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mx-add-price-and-agreement",
            "styleUrls": [
                "./add-price-and-agreement.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./add-price-and-agreement.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'mx-add-price-and-agreement',\n  templateUrl: './add-price-and-agreement.component.html',\n  styleUrls: ['./add-price-and-agreement.component.scss'],\n})\nexport class AddPriceAndAgreementComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {}\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./add-price-and-agreement.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "PRICE AND AGREEMENT\n"
        },
        {
            "name": "AddPropertyComponent",
            "id": "component-AddPropertyComponent-d13c8eb500559ede1a9dbf7ad975c881910472f387d917e1a275c58c8b11738297daffde359e716b054879cd36099451275866dcd3f5b55e84ea6e1274e763ea",
            "file": "src/app/add-property/add-property.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mx-add-listing",
            "styleUrls": [
                "./add-property.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./add-property.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "datetime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IonDatetime",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "IonDatetime, {static: true}"
                        }
                    ]
                },
                {
                    "name": "property",
                    "defaultValue": "{\n    title: '',\n    bedroom: 0,\n    bathroom: 0,\n    floors: 0,\n    square: 0,\n    lastFloor: false,\n    floor: 0,\n    price: 0,\n    place: null,\n    latitude: '',\n    type: null,\n    address: '',\n    longitude: '',\n    description: '',\n    isApproved: false,\n    authorID: -1,\n    categoryID: -1,\n    geoHash: '',\n    newConstruction: false,\n    built: 2021,\n    phone: '',\n    agentID: -1,\n    photo: '',\n    photoURLs: '',\n    nextTo: [],\n    videoURLs: '',\n    open_doors: null,\n    delete: false\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IPropertyDetails",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "rootRoute",
                    "defaultValue": "'/addProperty'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 58,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "routeLinks",
                    "defaultValue": "[\n    {path: AddPropertyScreen.location, active: true, title: 'TITLES.LOCATION', data: this.property},\n    {path: AddPropertyScreen.propertyDetails, active: false, title: 'TITLES.PROPERTY_DETAILS'},\n    {path: AddPropertyScreen.roomDetails, active: false, title: 'TITLES.ROOM_DETAILS'},\n    {path: AddPropertyScreen.media, active: false, title: 'TITLES.MEDIA'},\n    {path: AddPropertyScreen.priceAndAgreement, active: false, title: 'TITLES.PRICE_AND_AGREEMENT'},\n    {path: AddPropertyScreen.openDoorEvent, active: false, title: 'TITLES.OPEN_DOOR_EVENTS'}\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 61,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "steps",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IProgressBarStep[]",
                    "optional": false,
                    "description": "",
                    "line": 59,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "textType",
                    "defaultValue": "TextType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 60,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "activateRoute",
                    "args": [
                        {
                            "name": "next",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "next",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getActiveRoute",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "navigate",
                    "args": [
                        {
                            "name": "route",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 111,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "nextPage",
                    "args": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 100,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onOutletLoaded",
                    "args": [
                        {
                            "name": "component",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 106,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "component",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "previousPage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "updateStep",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 117,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, EventEmitter, Output, ViewChild} from '@angular/core';\nimport {IProgressBarStep} from '../shared/components/progress-bar/progress-bar.component';\nimport {StateService, StateType} from '../shared/services/state.service';\nimport {Router} from '@angular/router';\nimport {TextType} from '../shared/components/text/text.component';\nimport {IPropertyDetails} from '../shared/interfaces/property.interface';\nimport {IonDatetime} from '@ionic/angular';\n\nexport enum AddPropertyScreen {\n  location = 'location',\n  propertyDetails = 'propertyDetails',\n  roomDetails = 'roomDetails',\n  media = 'media',\n  priceAndAgreement = 'priceAndAgreement',\n  openDoorEvent = 'openDoorEvent'\n}\n\n@Component({\n  selector: 'mx-add-listing',\n  templateUrl: './add-property.component.html',\n  styleUrls: ['./add-property.component.scss'],\n})\nexport class AddPropertyComponent {\n\n  @ViewChild(IonDatetime, {static: true}) datetime: IonDatetime;\n\n\n  public property: IPropertyDetails = {\n    title: '',\n    bedroom: 0,\n    bathroom: 0,\n    floors: 0,\n    square: 0,\n    lastFloor: false,\n    floor: 0,\n    price: 0,\n    place: null,\n    latitude: '',\n    type: null,\n    address: '',\n    longitude: '',\n    description: '',\n    isApproved: false,\n    authorID: -1,\n    categoryID: -1,\n    geoHash: '',\n    newConstruction: false,\n    built: 2021,\n    phone: '',\n    agentID: -1,\n    photo: '',\n    photoURLs: '',\n    nextTo: [],\n    videoURLs: '',\n    open_doors: null,\n    delete: false\n  };\n  private rootRoute = '/addProperty';\n  public steps: IProgressBarStep[] = [];\n  public textType = TextType;\n  public routeLinks = [\n    {path: AddPropertyScreen.location, active: true, title: 'TITLES.LOCATION', data: this.property},\n    {path: AddPropertyScreen.propertyDetails, active: false, title: 'TITLES.PROPERTY_DETAILS'},\n    {path: AddPropertyScreen.roomDetails, active: false, title: 'TITLES.ROOM_DETAILS'},\n    {path: AddPropertyScreen.media, active: false, title: 'TITLES.MEDIA'},\n    {path: AddPropertyScreen.priceAndAgreement, active: false, title: 'TITLES.PRICE_AND_AGREEMENT'},\n    {path: AddPropertyScreen.openDoorEvent, active: false, title: 'TITLES.OPEN_DOOR_EVENTS'}\n  ];\n\n\n  constructor(private router: Router) {\n    this.steps = this.routeLinks.map(obj => ({\n      title: obj?.title,\n      active: obj?.active,\n      state: obj?.active ? StateType.submitted : StateType.initial\n    }));\n  }\n\n  private getActiveRoute(): number {\n    return this.routeLinks.findIndex((el) => el.active) || 0;\n  }\n\n  private activateRoute(next?: boolean): any {\n    let index = this.getActiveRoute();\n    index += next ? 1 : -1;\n    index = index < 0 ? undefined : index;\n    this.routeLinks.forEach(el => el.active = false);\n    if (index <= this.routeLinks.length) {\n      this.routeLinks[index].active = true;\n    }\n    return this.routeLinks[index];\n  }\n\n  public previousPage() {\n    const route = this.activateRoute();\n    this.navigate(route);\n    this.updateStep();\n  }\n\n  public nextPage($event) {\n    const route = this.activateRoute(true);\n    this.navigate(route);\n    this.updateStep();\n  }\n\n  public onOutletLoaded(component) {\n    component.property = this.property;\n  }\n\n\n  private navigate(route) {\n    if (route) {\n      this.router.navigate([`${this.rootRoute}/${route?.path}`]);\n    }\n  }\n\n  private updateStep() {\n    const routeIndex = this.getActiveRoute();\n    this.steps = this.steps.map((el, index) => {\n      el.active = index === routeIndex;\n      el.state = index <= routeIndex ? StateType.submitted : StateType.initial;\n      return el;\n    });\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"common\";\n\nmx-progress-bar {\n  display: flex;\n  position: sticky;\n}\n",
                    "styleUrl": "./add-property.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 68,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<ion-header>\n  <ion-toolbar>\n    <!--BACK-->\n    <ion-buttons slot=\"start\">\n      <ion-back-button (click)=\"previousPage()\"\n                       [text]=\"''\"\n                       color=\"primary\"\n                       [icon]=\"'chevron-back-outline'\">\n      </ion-back-button>\n    </ion-buttons>\n\n    <ion-title>{{'TITLES.ADD_NEW_PROPERTY' | translate}}</ion-title>\n\n    <!--NEXT-->\n    <ion-buttons slot=\"secondary\">\n      <ion-button (click)=\"nextPage($event)\" color=\"primary\" size=\"large\">\n        <ion-icon slot=\"icon-only\" name=\"arrow-forward-outline\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n\n  </ion-toolbar>\n</ion-header>\n\n\n<ion-content padding=\"true\" [fullscreen]=\"true\" [scrollY]=\"true\">\n  <!--  Progress Bar-->\n  <div class=\"section\">\n    <mx-progress-bar [steps]=\"steps\"></mx-progress-bar>\n  </div>\n  <router-outlet (activate)=\"onOutletLoaded($event)\"></router-outlet>\n  <ion-button size=\"large\" (click)=\"nextPage($event)\" expand=\"block\">{{'SAVE' | translate}}</ion-button>\n\n</ion-content>\n"
        },
        {
            "name": "AddPropertyDetailsComponent",
            "id": "component-AddPropertyDetailsComponent-743eed04df5b0c51aac57d84c46283a3e00cef6daeeed9234858581feb677f5c3144f55dbd820ee6315582761a34fd0f7530180018f4037e62985e82909e79d1",
            "file": "src/app/add-property/add-property-details/add-property-details.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mx-add-property-details",
            "styleUrls": [
                "./add-property-details.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./add-property-details.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "property",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "IPropertyDetails",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "customDayShortNames",
                    "defaultValue": "['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dateValue",
                    "defaultValue": "new Date().getFullYear()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "defaultSelectedRadio",
                    "defaultValue": "\"radio_2\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "mushrooms",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "pepperoni",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "radio_list",
                    "defaultValue": "[\n    {\n      id: '0',\n      name: 'radio_list',\n      value: 'radio_1',\n      text: 'YES',\n      disabled: false,\n      checked: true,\n      color: 'primary'\n    }, {\n      id: '1',\n      name: 'radio_list',\n      value: 'radio_2',\n      text: 'NO',\n      disabled: false,\n      checked: false,\n      color: 'secondary'\n    }\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "sausage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "selectedRadioGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "selectedRadioItem",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "textType",
                    "defaultValue": "TextType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "years",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onBalconyChange",
                    "args": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 112,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onDescriptionInput",
                    "args": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onFloorChange",
                    "args": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 104,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onKitchenChange",
                    "args": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 108,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onLastFloor",
                    "args": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 100,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onNewConstructionSelect",
                    "args": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSquareAreaInput",
                    "args": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 96,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onYearBuildSelect",
                    "args": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 88,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onYearChange",
                    "args": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "radioBlur",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "radioFocus",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "radioGroupChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setYears",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input, OnInit} from '@angular/core';\nimport {IPropertyDetails} from '../../shared/interfaces/property.interface';\nimport {TextType} from '../../shared/components/text/text.component';\n\n@Component({\n  selector: 'mx-add-property-details',\n  templateUrl: './add-property-details.component.html',\n  styleUrls: ['./add-property-details.component.scss'],\n})\nexport class AddPropertyDetailsComponent implements OnInit {\n\n  @Input() property: IPropertyDetails;\n\n  public defaultSelectedRadio = \"radio_2\";\n  //Get value on ionChange on IonRadioGroup\n  public selectedRadioGroup: any;\n  //Get value on ionSelect on IonRadio item\n  public selectedRadioItem: any;\n  public radio_list = [\n    {\n      id: '0',\n      name: 'radio_list',\n      value: 'radio_1',\n      text: 'YES',\n      disabled: false,\n      checked: true,\n      color: 'primary'\n    }, {\n      id: '1',\n      name: 'radio_list',\n      value: 'radio_2',\n      text: 'NO',\n      disabled: false,\n      checked: false,\n      color: 'secondary'\n    }\n  ];\n  public customDayShortNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\n  pepperoni: any;\n  sausage: any;\n  mushrooms: any;\n\n  public dateValue = new Date().getFullYear();\n  public years = [];\n\n  public textType = TextType;\n\n  constructor() {\n  }\n\n\n  ngOnInit() {\n    this.setYears();\n  }\n\n  public onYearChange($event) {\n    // this.dateValue = $event.value;\n  }\n\n  private setYears() {\n    const res = [];\n    const currentYear = new Date().getFullYear() + 5;\n    for (let i = 0; i < 70; i++) {\n      res.push(currentYear - i);\n    }\n    this.years = res;\n  }\n\n  public radioGroupChange(event) {\n    console.log(\"radioGroupChange\", event.detail);\n    this.selectedRadioGroup = event.detail;\n  }\n\n  public radioFocus() {\n    console.log(\"radioFocus\");\n  }\n\n\n  public radioBlur() {\n    console.log(\"radioBlur\");\n  }\n\n  public onNewConstructionSelect($event) {\n    this.property.newConstruction = $event;\n  }\n\n  public onYearBuildSelect($event) {\n    this.property.built = $event;\n  }\n\n  public onDescriptionInput($event) {\n    this.property.description = $event;\n  }\n\n  public onSquareAreaInput($event) {\n    this.property.square = $event;\n  }\n\n  public onLastFloor($event) {\n    this.property.floor = $event;\n  }\n\n  public onFloorChange($event) {\n    this.property.floor = $event;\n  }\n\n  public onKitchenChange($event) {\n    this.property.kitchen = $event;\n  }\n\n  public onBalconyChange($event) {\n    this.property.balcony = $event;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./add-property-details.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 47
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"section\">\n  <!--  Square¬-->\n  <ion-item class=\"section field\">\n    <ion-label position=\"fixed\">\n      <mx-text\n        [type]=\"textType.sectionTitle\" [title]=\"'SQUARE_AREA' | translate\"></mx-text>\n    </ion-label>\n    <mx-input\n      class=\"full-width\"\n      [value]=\"0\"\n      (onChange)=\"onSquareAreaInput($event)\"\n      [placeholder]=\"'PLACEHOLDERS.ENTER_VALUE_IN' | translate : {value: '(meter/feets)'}\"></mx-input>\n  </ion-item>\n\n  <!--  Year Build-->\n  <ion-item class=\"section field\">\n    <ion-label>\n      <mx-text [type]=\"textType.sectionTitle\" [title]=\"'YEAR_BUILD' | translate\"></mx-text>\n    </ion-label>\n    <ion-select\n      ok-text=\"Okay\" cancel-text=\"Nah\"\n      class=\"year\"\n      [value]=\"dateValue\" (ionChange)=\"onYearBuildSelect($event)\">\n      <ion-select-option *ngFor=\"let year of years\" [value]=\"year\">{{year}}</ion-select-option>\n    </ion-select>\n  </ion-item>\n  <!--  New Construction-->\n  <ion-item class=\"flex-column field flex-row ion-align-items-center full-width\">\n    <ion-label>\n      <mx-text [type]=\"textType.sectionTitle\" [title]=\"'NEW_CONSTRUCTION' | translate\"></mx-text>\n    </ion-label>\n    <ion-list class=\"flex-auto mx-checkboxes\">\n      <ion-radio-group allow-empty-selection=\"false\"\n                       class=\"flex-auto flex-1\"\n                       name=\"radio-group\"\n                       (ionChange)=\"onNewConstructionSelect($event)\"\n                       #radioGroup>\n        <ion-row class=\"flex-auto ion-float-right\">\n          <ion-item *ngFor=\"let item of radio_list\"\n                    (ionFocus)=\"radioFocus()\"\n                    (ionBlur)=\"radioBlur()\">\n            <ion-label class=\"mx-label\">{{item.text | translate}}</ion-label>\n            <ion-radio name=\"{{item.name}}\"\n                       value=\"{{item.value}}\"\n                       checked=\"{{item.checked}}\"\n                       color=\"{{item.color}}\"\n                       disabled=\"{{item.disabled}}\">\n            </ion-radio>\n          </ion-item>\n        </ion-row>\n      </ion-radio-group>\n    </ion-list>\n  </ion-item>\n  <!--    ON THE LAND-->\n  <ion-item class=\"section field\">\n    <ion-label>\n      <mx-text [type]=\"textType.sectionTitle\" [title]=\"'ON_THE_LAND' | translate\"></mx-text>\n    </ion-label>\n    <ion-toggle [(ngModel)]=\"pepperoni\"></ion-toggle>\n  </ion-item>\n\n  <!--   LAST FLOOR-->\n  <ion-item class=\"section field\">\n    <ion-label>\n      <mx-text [type]=\"textType.sectionTitle\" [title]=\"'LAST_FLOOR' | translate\"></mx-text>\n    </ion-label>\n    <ion-toggle\n      [checked]=\"!!property.lastFloor\"\n      (ionChange)=\"onLastFloor($event)\"></ion-toggle>\n  </ion-item>\n\n  <!--  FLOOR-->\n  <ion-item class=\"section field\" *ngIf=\"!property.lastFloor\">\n    <ion-label position=\"fixed\">\n      <mx-text\n        [type]=\"textType.sectionTitle\" [title]=\"'SQUARE_AREA' | translate\"></mx-text>\n    </ion-label>\n    <mx-input\n      class=\"full-width\"\n      [value]=\"property.floor\"\n      (onChange)=\"onFloorChange($event)\"\n      [placeholder]=\"'FLOOR' | translate\"></mx-input>\n  </ion-item>\n\n  <!--  BEDROOMS-->\n  <ion-item class=\"section field\">\n    <mx-plus-minus-toggle class=\"full-width\"\n                          (onChange)=\"onKitchenChange($event)\"\n                          [value]=\"property.floor\"\n                          [max]=\"10\"\n                          [title]=\"'BEDROOMS' | translate\">\n    </mx-plus-minus-toggle>\n  </ion-item>\n\n  <!--  BATHROOMS-->\n  <ion-item class=\"section field\">\n    <mx-plus-minus-toggle class=\"full-width\"\n                          (onChange)=\"onKitchenChange($event)\"\n                          [value]=\"property.floor\"\n                          [max]=\"5\"\n                          [title]=\"'BATHROOMS' | translate\">\n    </mx-plus-minus-toggle>\n  </ion-item>\n\n  <!--  KITCHEN-->\n  <ion-item class=\"section field\">\n    <mx-plus-minus-toggle class=\"full-width\"\n                          (onChange)=\"onKitchenChange($event)\"\n                          [value]=\"property.floor\"\n                          [max]=\"5\"\n                          [title]=\"'KITCHEN' | translate\">\n    </mx-plus-minus-toggle>\n  </ion-item>\n\n  <!--  Balcony -->\n  <ion-item class=\"section field\">\n    <mx-plus-minus-toggle class=\"full-width\"\n                          (onChange)=\"onKitchenChange($event)\"\n                          [value]=\"property.floor\"\n                          [max]=\"3\"\n                          [title]=\"'BALCONY' | translate\">\n    </mx-plus-minus-toggle>\n  </ion-item>\n\n  <!--  Description-->\n  <ion-item>\n    <mx-text [type]=\"textType.sectionTitle\"\n             [title]=\"'DESCRIPTION' | translate\">\n    </mx-text>\n  </ion-item>\n  <mx-textarea\n    [value]=\"property.description\"\n    (onChange)=\"onDescriptionInput($event)\"\n    [inputmode]=\"'text'\">\n  </mx-textarea>\n\n</div>\n\n"
        },
        {
            "name": "AddRoomDetailsComponent",
            "id": "component-AddRoomDetailsComponent-809833df6390ea8852c2f935100eeeff5c041b3b17b252f196dd45d3ef7dbc3c9a23e46fc6aa6d1b5aa9e39c58e63c84a768c5e6999dcdf55bc92a835534059f",
            "file": "src/app/add-property/add-room-details/add-room-details.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mx-add-room-details",
            "styleUrls": [
                "./add-room-details.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./add-room-details.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'mx-add-room-details',\n  templateUrl: './add-room-details.component.html',\n  styleUrls: ['./add-room-details.component.scss'],\n})\nexport class AddRoomDetailsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {}\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./add-room-details.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "ROOM DETAILS\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-2bc0a1b3cd96c42b8a85e97007aada604444cd9fbf2bdea8bb52c8fb9a3b497317f2b9ff5ab4c85fc0206d60fea1d474e95bbb2d9a408887245e13b932f65e24",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mx-root",
            "styleUrls": [
                "app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "initializeApp",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                },
                {
                    "name": "switchLang",
                    "args": [
                        {
                            "name": "lang",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "lang",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component} from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\nimport {Platform} from '@ionic/angular';\n\n\n@Component({\n  selector: 'mx-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss'],\n})\nexport class AppComponent {\n\n  constructor(private translate: TranslateService,\n              private platform: Platform) {\n    this.initializeApp();\n  }\n\n  public switchLang(lang: string) {\n    this.translate.use(lang);\n  }\n\n  async initializeApp() {\n    this.translate.setDefaultLang('en');\n    this.translate.addLangs(['en', 'he']);\n    this.translate.use('en');\n    this.platform.ready().then(async () => {\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "platform",
                        "type": "Platform",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "platform",
                        "type": "Platform",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<ion-app>\n  <ion-router-outlet></ion-router-outlet>\n</ion-app>\n"
        },
        {
            "name": "ButtonListComponent",
            "id": "component-ButtonListComponent-3d949a27b285c958107779427bb33ba37fcec642cc9239c55a6744ba425821b63cbe5dca6699b99ca377b71728eefa7cb03a03ac5275b20a3201818c4d70e0da",
            "file": "src/app/shared/components/button-list/button-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mx-button-list",
            "styleUrls": [
                "./button-list.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button-list.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "buttons",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string[]",
                    "decorators": []
                },
                {
                    "name": "preview",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "values",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "previewButtons",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "isSelected",
                    "args": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClickEvent",
                    "args": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onOtherClick",
                    "args": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChange, SimpleChanges} from '@angular/core';\nimport {Utils} from '../../../../utils';\n\n@Component({\n  selector: 'mx-button-list',\n  templateUrl: './button-list.component.html',\n  styleUrls: ['./button-list.component.scss'],\n})\nexport class ButtonListComponent implements OnInit, OnChanges {\n\n  @Input() title: string;\n  @Input() buttons: string[];\n  @Input() values: string[];\n  @Input() preview = true;\n  @Output() onClick: EventEmitter<any> = new EventEmitter<any>();\n\n  previewButtons: string[];\n\n  constructor() {\n  }\n\n\n  ngOnInit() {\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.buttons) {\n      this.previewButtons = this.buttons.length > 3 ? this.buttons.slice(0, 3) : this.buttons;\n    }\n  }\n\n  public onClickEvent($event) {\n    this.values = Utils.addRemoveListItem(this.values, $event);\n    this.onClick.emit(this.values);\n  }\n\n  onOtherClick($event) {\n    this.previewButtons = this.buttons;\n  }\n\n  public isSelected($event): boolean {\n    return this.values.includes($event);\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./button-list.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 17
            },
            "implements": [
                "OnInit",
                "OnChanges"
            ],
            "templateData": "<mx-text [type]=\"'sectionTitle'\" [title]=\"title\"></mx-text>\n<div class=\"flex-wrap ion-padding-vertical\">\n  <ion-button (click)=\"onClickEvent(obj)\" *ngFor=\"let obj of previewButtons\"\n              [color]=\"isSelected(obj) ? 'primary' : 'light'\">\n    {{obj | translate}}\n  </ion-button>\n</div>\n\n<ion-button (click)=\"onOtherClick($event)\"\n            *ngIf=\"preview\"\n            expand=\"block\" size=\"small\"\n            fill=\"outline\">\n  <ion-icon slot=\"start\" name=\"add\"></ion-icon>\n  <ion-label>{{(previewButtons?.length !== buttons?.length) ? 'OTHER' : 'HIDE' | translate}}</ion-label>\n  <!--  <ion-icon slot=\"end\" name=\"start\"></ion-icon>-->\n</ion-button>\n"
        },
        {
            "name": "CalendarComponent",
            "id": "component-CalendarComponent-553674e45f700107c78ad0341fb58e28095374d5795fa91ecef2252754758cb5bbccdc0fa280c7804a5067155bd4e91e413d2c5f09599616d3498ab13a94dd9d",
            "file": "src/app/shared/components/calendar/calendar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mx-calendar",
            "styleUrls": [
                "./calendar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./calendar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'mx-calendar',\n  templateUrl: './calendar.component.html',\n  styleUrls: ['./calendar.component.scss'],\n})\nexport class CalendarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {}\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./calendar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>\n  calendar works!\n</p>\n"
        },
        {
            "name": "CategoriesComponent",
            "id": "component-CategoriesComponent-7d21825fea5780ddaedeb6f003a10a5320058511477205920159119c5624534d06fb700bde4a894cd2cdbcc42a0ba7420a127e4948f218f98ca9a99485f196b0",
            "file": "src/app/categories/categories.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mx-categories",
            "styleUrls": [
                "./categories.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./categories.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'mx-categories',\n  templateUrl: './categories.component.html',\n  styleUrls: ['./categories.component.scss'],\n})\nexport class CategoriesComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./categories.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "CATEGOREIS\n"
        },
        {
            "name": "CategoriesComponent",
            "id": "component-CategoriesComponent-3461836992cbc030f0949afd2458c484ba6e4fa1045dd6a8c9f1757cfcf052e1a640a94d9ba7ca37cd96fb3eb555a684611710e236d599d1af2c930e0f439bed-1",
            "file": "src/app/shared/components/categories/categories.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mx-categories",
            "styleUrls": [
                "./categories.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./categories.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "categories",
                    "defaultValue": "categories",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "inRow",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "Color",
                    "defaultValue": "Color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "selected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ICategory",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onCategoryChange",
                    "args": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {categories} from './categories.data';\nimport {Color} from '../../enums';\n\nexport interface ICategory {\n  title?: string;\n  size?: string;\n  icon?: string;\n  selected?: boolean;\n}\n\n@Component({\n  selector: 'mx-categories',\n  templateUrl: './categories.component.html',\n  styleUrls: ['./categories.component.scss'],\n})\nexport class CategoriesComponent implements OnInit {\n\n\n  @Input() categories = categories;\n  @Input() inRow: boolean;\n  @Output() onClick: EventEmitter<any> = new EventEmitter<any>();\n  public Color = Color;\n  private selected: ICategory;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  public onCategoryChange($event) {\n    this.selected = $event.detail.value;\n    this.onClick.emit($event)\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'colors';\n\n\nion-segment {\n  display: flex;\n  //justify-content: space-evenly;\n\n  &.scrollHorizontal {\n    overflow-x: scroll;\n  }\n\n  ion-segment-button {\n    display: grid;\n    flex-direction: column;\n    border-radius: 8px;\n    border: 2px solid $color-border;\n\n    .category-icon-text-wrapper {\n      //display: flex;\n      //flex-direction: column;\n      //align-items: center;\n      padding: 0.5rem;\n      margin: 0.1rem;\n      width: 3rem;\n      max-height: 4.4rem;\n      min-height: 4.4rem;\n      border-radius: 5px;\n      justify-content: flex-start;\n      //box-shadow: $color-shadow;\n\n      mx-text {\n        display: flex;\n        align-self: center;\n        text-align: center;\n        justify-content: center;\n        max-width: 4.5rem;\n      }\n    }\n\n    mx-checkbox {\n      height: 0;\n      text-align: right;\n      z-index: 1;\n      margin-right: -0.3rem;\n      grid-area: 1 / 1;\n    }\n\n\n    ion-icon {\n\n    }\n\n    mx-text {\n      margin: 0.2rem;\n    }\n  }\n}\n",
                    "styleUrl": "./categories.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 24
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "CategoriesComponent-1",
            "templateData": "<ion-segment\n  color=\"primary\"\n  (ionChange)=\"onCategoryChange($event)\"\n  class=\"categories-list flex-wrap\"\n  [class.scrollHorizontal]=\"inRow\"\n  [class.flex-row]=\"inRow\">\n  <ion-segment-button\n    class=\"category-button\"\n    *ngFor=\"let category of categories\" value=\"{{category.title}}\">\n    <mx-checkbox\n      *ngIf=\"category.title === selected\"\n      [size]=\"'medium'\" [background]=\"Color.primary\"\n      [color]=\"Color.light\"></mx-checkbox>\n    <ion-icon\n      [size]=\"'large'\"\n      [name]=\"category.icon\">\n    </ion-icon>\n    <ion-label class=\"text\" text-wrap>{{category.title | translate}}</ion-label>\n  </ion-segment-button>\n</ion-segment>\n"
        },
        {
            "name": "CheckboxComponent",
            "id": "component-CheckboxComponent-3a14d687cf197fb923fb710f3292cb8e0f31e830083ffc26872268bcfbf74bc6e5567110bc6780aa946dfe1f22558c93115ac3466c75e2ce2996c744133da7ac",
            "file": "src/app/shared/components/checkbox/checkbox.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mx-checkbox",
            "styleUrls": [
                "./checkbox.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./checkbox.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "background",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "Color",
                    "decorators": []
                },
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "Color",
                    "decorators": []
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input} from '@angular/core';\nimport {Color} from '../../enums';\n\n@Component({\n  selector: 'mx-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss'],\n})\nexport class CheckboxComponent {\n\n  @Input() size: string;\n  @Input() background: Color;\n  @Input() color: Color;\n\n\n  public get _size(): string {\n    switch (this.size) {\n      case 'small':\n        return '1rem';\n      case 'large':\n        return '2rem';\n      case 'medium':\n      default:\n        return '1.5rem';\n    }\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./checkbox.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "_size": {
                    "name": "_size",
                    "getSignature": {
                        "name": "_size",
                        "type": "string",
                        "returnType": "string",
                        "line": 16
                    }
                }
            },
            "templateData": "<svg [attr.width]=\"_size\"\n     [attr.height]=\"_size\"\n     viewBox=\"0 0 25 25\" version=\"1.1\"\n     xmlns=\"http://www.w3.org/2000/svg\"\n     xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n  <g id=\"All-Pages\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n    <g id=\"checklist-(2)-copy\" fill-rule=\"nonzero\">\n      <circle id=\"Oval\" [attr.fill]=\"'#ffffff'\" cx=\"12.5\" cy=\"12.5\" r=\"12.5\"></circle>\n      <circle id=\"Oval\" [attr.fill]=\"background\" cx=\"12.5\" cy=\"12.5\" r=\"10.5\"></circle>\n      <path\n        d=\"M11.2713272,18 C10.9364695,18 10.6158785,17.8593482 10.3827583,17.6099531 L6.35819412,13.3082446 C6.04495783,12.9798948 5.92577638,12.5023373 6.04606082,12.057533 C6.16634526,11.6127288 6.50757016,11.2691837 6.93972049,11.1577969 C7.37187081,11.0464101 7.82838955,11.1843366 8.1353319,11.5190231 L11.2400668,14.8374348 L16.8558665,8.40840683 C17.3176077,7.8949242 18.0911623,7.86114102 18.5928643,8.33254756 C19.0945662,8.80395409 19.1385603,9.60591816 18.691652,10.133338 L12.1906032,17.578956 C11.9601506,17.8420811 11.6349923,17.994495 11.2923519,18 L11.2713272,18 Z\"\n        id=\"Path\" [attr.fill]=\"color\"></path>\n    </g>\n  </g>\n</svg>\n"
        },
        {
            "name": "InputComponent",
            "id": "component-InputComponent-69b0a48f4a5ee06852c7aa4d842f675dae20c8a1e1dd16864dfd83733c58358237c7e34cda9bf7cd09273e253dbb512898c1dd076eaf81fad5fcd9226c475fc3",
            "file": "src/app/shared/components/input/input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mx-input",
            "styleUrls": [
                "./input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "autocomplete",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "\"on\" | \"off\"",
                    "decorators": []
                },
                {
                    "name": "autocorrect",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "\"on\" | \"off\"",
                    "decorators": []
                },
                {
                    "name": "border",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "clearInput",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "clearOnEdit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "Color | \"string\"",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "max",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "maxlength",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "min",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "minlength",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "multiple",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "readonly",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "required",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "spellcheck",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "step",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52,
                    "type": "InputType",
                    "decorators": []
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onBlur",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 56,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onChange",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onFocus",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 55,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onInput",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 57,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onBlurEvent",
                    "args": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onChangeEvent",
                    "args": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onFocusEvent",
                    "args": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onInputEvent",
                    "args": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Color} from '../../enums';\n\nexport enum InputType {\n  date = 'date',\n  datetime = 'datetime-local',\n  email = 'email',\n  month = 'month',\n  numberType = 'number',\n  password = 'password',\n  search = 'search',\n  tel = 'tel',\n  text = 'text',\n  file = 'file',\n  time = 'time',\n  url = 'url',\n  week = 'week'\n}\n\n@Component({\n  selector: 'mx-input',\n  templateUrl: './input.component.html',\n  styleUrls: ['./input.component.scss'],\n})\nexport class InputComponent implements OnInit {\n\n  @Input() value: string;\n  // defaulf \"off\"\n  @Input() autocomplete: 'on' | 'off';\n  @Input() autocorrect: 'on' | 'off';\n  @Input() clearInput: boolean;\n  @Input() required: boolean;\n  @Input() color: Color | 'string';\n  @Input() maxlength: number;\n  @Input() minlength: number;\n  // If true, the value will be cleared after focus upon edit. Defaults to true when type is \"password\", false for all other types.\n  @Input() clearOnEdit: boolean;\n  @Input() readonly: boolean;\n  @Input() disabled: boolean;\n  @Input() border: boolean;\n  // This attribute applies only when the type attribute is set to \"text\", \"search\", \"tel\", \"url\", \"email\", or \"password\", otherwise it is ignored.\n  @Input() size: number;\n  @Input() icon: string;\n  @Input() min: any;\n  @Input() max: any;\n  // Works with the min and max\n  @Input() step: any;\n  @Input() spellcheck: boolean;\n  @Input() placeholder: string;\n  // This attribute applies when the type attribute is set to \"email\" or \"file\", otherwise it is ignored.\n  @Input() multiple: boolean;\n  @Input() type: InputType;\n\n  @Output() onChange: EventEmitter<any> = new EventEmitter<any>();\n  @Output() onFocus: EventEmitter<any> = new EventEmitter<any>();\n  @Output() onBlur: EventEmitter<any> = new EventEmitter<any>();\n  @Output() onInput: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  public onChangeEvent($event) {\n    this.onChange.emit($event);\n  }\n\n  public onFocusEvent($event) {\n    this.onFocus.emit($event);\n  }\n\n  public onBlurEvent($event) {\n    this.onBlur.emit($event);\n  }\n\n  public onInputEvent($event) {\n    this.onInput.emit($event);\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"colors\";\n@import \"fonts\";\n\n.input-field {\n  border-radius: 5px;\n}\n\n\n//--background\tBackground of the input\n//--color\tColor of the input text\n//--padding-bottom\tBottom padding of the input\n//--padding-end\tRight padding if direction is left-to-right, and left padding if direction is right-to-left of the input\n//--padding-start\tLeft padding if direction is left-to-right, and right padding if direction is right-to-left of the input\n//--padding-top\tTop padding of the input\n//--placeholder-color\tColor of the input placeholder text\n//--placeholder-font-style\tFont style of the input placeholder text\n//--placeholder-font-weight\tFont weight of the input placeholder text\n//--placeholder-opacity\n",
                    "styleUrl": "./input.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 57
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ion-item class=\"input-field\">\n  <ion-input\n    [autocomplete]=\"autocomplete\"\n    [autocorrect]=\"autocorrect\"\n    [clearInput]=\"clearInput\"\n    [clearOnEdit]=\"clearOnEdit\"\n    [max]=\"max\"\n    [min]=\"min\"\n    [maxlength]=\"maxlength\"\n    [minlength]=\"minlength\"\n    [readonly]=\"readonly\"\n    [disabled]=\"disabled\"\n    [multiple]=\"multiple\"\n    [spellcheck]=\"spellcheck\"\n    [size]=\"size\"\n    [step]=\"step\"\n    [required]=\"required\"\n    [color]=\"color\"\n    [placeholder]=\"placeholder | translate\"\n    [value]=\"value || ''\"\n    [type]=\"type\"\n    (ionBlur)=\"onBlurEvent($event)\"\n    (ionChange)=\"onChangeEvent($event)\"\n    (ionFocus)=\"onFocusEvent($event)\"\n    (ionInput)=\"onInputEvent($event)\">\n  </ion-input>\n  <ion-icon *ngIf=\"icon\" [name]=\"icon\" color=\"primary\" slot=\"end\" align-self-center></ion-icon>\n</ion-item>\n"
        },
        {
            "name": "InputTextAreaComponent",
            "id": "component-InputTextAreaComponent-909c4456940dddb350ecaae5c31775bc4c03a49e6514da6403f2f4412b93c9cf5a82549830c30f349a2939989bf0196d8f2709e37536ec7a712074ad6eddf223",
            "file": "src/app/shared/components/input-textarea/input-textarea.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mx-textarea",
            "styleUrls": [
                "./input-textarea.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./input-textarea.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "autofocus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "autoGrow",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "cols",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "debounce",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "enterkeyhint",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "\"done\" | \"enter\" | \"go\" | \"next\" | \"previous\" | \"search\" | \"send\" | undefined",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "inputmode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "InputAreaMode",
                    "decorators": []
                },
                {
                    "name": "mode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "InputAreaModeType",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "readonly",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "rows",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "wrap",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "\"hard\" | \"off\" | \"soft\" | undefined",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onBlur",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onChange",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onFocus",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onInput",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onBlurEvent",
                    "args": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onChangeEvent",
                    "args": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onFocusEvent",
                    "args": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onInputEvent",
                    "args": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\nexport enum InputAreaMode {\n  decimal = 'decimal',\n  email = 'email',\n  none = 'none',\n  numeric = 'numeric',\n  search = 'search',\n  tel = 'tel',\n  text = 'text',\n  url = 'url'\n}\n\nexport enum InputAreaModeType {\n  ios = ' ios',\n  md = 'md'\n}\n\n\n@Component({\n  selector: 'mx-textarea',\n  templateUrl: './input-textarea.component.html',\n  styleUrls: ['./input-textarea.component.scss'],\n})\nexport class InputTextAreaComponent implements OnInit {\n\n\n  @Input() value: string;\n  @Input() readonly: boolean;\n  @Input() disabled: boolean;\n  @Input() icon: string;\n  @Input() autoGrow: boolean;\n  @Input() autofocus: boolean;\n  @Input() cols: number;\n  @Input() rows: number;\n  @Input() debounce: number;\n  @Input() inputmode: InputAreaMode;\n  @Input() mode: InputAreaModeType;\n  @Input() placeholder: string;\n  @Input() enterkeyhint: 'done' | 'enter' | 'go' | 'next' | 'previous' | 'search' | 'send' | undefined;\n  @Input() wrap: 'hard' | 'off' | 'soft' | undefined;\n\n  @Output() onChange: EventEmitter<any> = new EventEmitter<any>();\n  @Output() onFocus: EventEmitter<any> = new EventEmitter<any>();\n  @Output() onBlur: EventEmitter<any> = new EventEmitter<any>();\n  @Output() onInput: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  public onChangeEvent($event) {\n    this.onChange.emit($event);\n  }\n\n  public onFocusEvent($event) {\n    this.onFocus.emit($event);\n  }\n\n  public onBlurEvent($event) {\n    this.onBlur.emit($event);\n  }\n\n  public onInputEvent($event) {\n    this.onInput.emit($event);\n  }\n\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"colors\";\n@import \"fonts\";\n\n//--background\tBackground of the input\n//--color\tColor of the input text\n//--padding-bottom\tBottom padding of the input\n//--padding-end\tRight padding if direction is left-to-right, and left padding if direction is right-to-left of the input\n//--padding-start\tLeft padding if direction is left-to-right, and right padding if direction is right-to-left of the input\n//--padding-top\tTop padding of the input\n//--placeholder-color\tColor of the input placeholder text\n//--placeholder-font-style\tFont style of the input placeholder text\n//--placeholder-font-weight\tFont weight of the input placeholder text\n//--placeholder-opacity\n",
                    "styleUrl": "./input-textarea.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 46
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ion-item class=\"field\">\n  <ion-textarea\n    (ionBlur)=\"onBlurEvent($event)\"\n    (ionChange)=\"onChangeEvent($event)\"\n    (ionFocus)=\"onFocusEvent($event)\"\n    (ionInput)=\"onInputEvent($event)\"\n    [autoGrow]=\"autoGrow\"\n    [value]=\"value\"\n    [placeholder]=\"placeholder\">\n  </ion-textarea>\n  <ion-icon *ngIf=\"icon\" [name]=\"icon\" color=\"primary\" slot=\"end\" align-self-center></ion-icon>\n</ion-item>\n"
        },
        {
            "name": "MapComponent",
            "id": "component-MapComponent-dc2ee43f56320acbd4c2e596be760a8f3a56ecd94748e44e685213e00fe55b738150e1766c5786137c19e2a665d0ae8805553136ba4acd53a0f53556c8636c2d",
            "file": "src/app/map/map.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mx-map",
            "styleUrls": [
                "./map.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./map.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "map",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "L.Map",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "mapRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'mapRef', {static: false}"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "initMap",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  NgZone,\n  AfterViewInit,\n  Output,\n  Input,\n  EventEmitter,\n  ChangeDetectorRef,\n  ViewChild, ElementRef, OnInit\n} from '@angular/core';\n\nimport * as L from 'leaflet';\n\nimport {circle, latLng, polygon, tileLayer, TileLayer} from 'leaflet';\n\nconst openStreetMapUrl = 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';\nconst openCycleMapUrl = 'http://{s}.tile.opencyclemap.org/cycle/{z}/{x}/{y}.png';\n\n@Component({\n  selector: 'mx-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.scss'],\n})\nexport class MapComponent implements AfterViewInit {\n  private map: L.Map;\n  @ViewChild('mapRef', {static: false}) mapRef: ElementRef;\n\n  constructor(private zone: NgZone) {\n  }\n\n  ngAfterViewInit(): void {\n    this.initMap();\n  }\n\n  ngOnInit() {\n\n    // The 'add' event callback handler happens outside of the Angular zone\n    // this.circle.on('add', () => {\n    //   // But, we can run stuff inside of Angular's zone by calling NgZone.run()\n    //   // everything inside the arrow function body happens inside of Angular's zone, where changes will be detected\n    //   this.zone.run(() => {\n    //     this.fitBounds = this.circle.getBounds();\n    //   });\n    // });\n  }\n\n  private initMap(): void {\n    const cities = L.marker([39.61, -105.02]).bindPopup('This is Littleton, CO.'),\n      denver = L.marker([39.74, -104.99]).bindPopup('This is Denver, CO.'),\n      aurora = L.marker([39.73, -104.8]).bindPopup('This is Aurora, CO.'),\n      golden = L.marker([39.77, -105.23]).bindPopup('This is Golden, CO.');\n\n    const grayscale = L.tileLayer(openStreetMapUrl, {id: 'mapRef', tileSize: 512, zoomOffset: -1, attribution: ''});\n    const streets = L.tileLayer(openStreetMapUrl, {id: 'mapRef', tileSize: 512, zoomOffset: -1, attribution: ''});\n    this.map = L.map('mapRef', {\n      zoomControl: true,\n      center: [39.8282, -98.5795],\n      zoom: 5,\n      layers: [grayscale, streets]\n    });\n    const baseMaps = {\n      \"Grayscale\": grayscale,\n      \"Streets\": streets\n    };\n    const overlayMaps = {\n      \"Cities\": cities\n    };\n    L.control.layers(baseMaps, overlayMaps).addTo(this.map);\n    this.map.invalidateSize();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./map.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "zone",
                        "type": "NgZone",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 26,
                "jsdoctags": [
                    {
                        "name": "zone",
                        "type": "NgZone",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<div id=\"mapRef\"\n     style=\"height: 20rem\">\n</div>\n"
        },
        {
            "name": "PlusMinusToggleComponent",
            "id": "component-PlusMinusToggleComponent-452039a92ab9ade6e586ba416eb900a0378b2dc6464bd857c4b168ec8f83c31753898c1afc404ab3c22cb513e5f93f3a5bccf468db14676c17d5d81f09566ac1",
            "file": "src/app/shared/components/plus-minus-toggle/plus-minus-toggle.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mx-plus-minus-toggle",
            "styleUrls": [
                "./plus-minus-toggle.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./plus-minus-toggle.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "max",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "min",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onMinusClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onPlusClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n@Component({\n  selector: 'mx-plus-minus-toggle',\n  templateUrl: './plus-minus-toggle.component.html',\n  styleUrls: ['./plus-minus-toggle.component.scss'],\n})\nexport class PlusMinusToggleComponent implements OnInit {\n\n\n  @Input() title: string = '';\n  @Input() value: number = 0;\n\n  @Input() min: number;\n  @Input() max: number;\n\n  @Output() onChange = new EventEmitter();\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n\n  public onMinusClick() {\n    if (this.value <= 0 || this.value <= this.min) {\n      this.onChange.emit(0);\n    } else {\n      this.value--;\n      this.onChange.emit(this.value);\n    }\n  }\n\n  public onPlusClick() {\n    if (this.max <= this.value) {\n      this.onChange.emit(this.max);\n    } else {\n      this.value++;\n      this.onChange.emit(this.value);\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./plus-minus-toggle.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 17
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ion-item class=\"full-width\">\n  <ion-label>\n    <mx-text [type]=\"'sectionTitle'\" [title]=\"title\"></mx-text>\n  </ion-label>\n  <ion-fab-button (click)=\"onMinusClick()\" color=\"primary\" size=\"small\">-</ion-fab-button>\n  <div class=\"number-value\">{{value}}</div>\n  <ion-fab-button (click)=\"onPlusClick()\" size=\"small\">+</ion-fab-button>\n</ion-item>\n"
        },
        {
            "name": "ProfileComponent",
            "id": "component-ProfileComponent-0f354d7d0f32463a43153d9270a25c6fdf70cf102543efbf919c4ae9b7d64c4778bf92ddbf72d467dadcc69a7ebe42166375b28ac0d1ed6a80217955dec38987",
            "file": "src/app/profile/profile.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mx-profile",
            "styleUrls": [
                "./profile.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./profile.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'mx-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss'],\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {}\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./profile.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>\n  profile works!\n</p>\n"
        },
        {
            "name": "ProgressBarComponent",
            "id": "component-ProgressBarComponent-d090be2294a2d5ef320acef0726b628132ae5d4403761d6701515109149e3734cd8a101f2eb97a46676316fad8f5a72e2e21151a5d4a9573d6905762dcfad919",
            "file": "src/app/shared/components/progress-bar/progress-bar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mx-progress-bar",
            "styleUrls": [
                "./progress-bar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./progress-bar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "IProgressBarConfig",
                    "decorators": []
                },
                {
                    "name": "steps",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "IProgressBarStep[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<IClickStepEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52,
                    "type": "EventEmitter<IClickStepEvent>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "backgroundColor",
                    "args": [
                        {
                            "name": "step",
                            "type": "IProgressBarStep",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Color",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "step",
                            "type": "IProgressBarStep",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "clickHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "step",
                            "type": "IProgressBarStep",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "step",
                            "type": "IProgressBarStep",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getActiveIndex",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "iconColor",
                    "args": [
                        {
                            "name": "step",
                            "type": "IProgressBarStep",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Color",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "step",
                            "type": "IProgressBarStep",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Color, IconSize} from '../../enums';\nimport {StateService, StateType} from '../../services/state.service';\nimport {Utils} from '../../../../utils';\n\nexport enum ProgressBarPosition {\n  horizontalTop = 'top',\n  horizontalBottom = 'bottom',\n  verticalLeft = 'left',\n  verticalRight = 'right'\n}\n\n\nexport interface IProgressBarConfig {\n  position?: ProgressBarPosition;\n  size?: number;\n  borderColor?: Color | string;\n  selectedColor?: Color | string;\n  icon?: string;\n  fontSize?: number;\n  fontWeight?: number;\n  titlePosition?: ProgressBarPosition;\n}\n\nexport interface IProgressBarStep {\n  title?: string;\n  state?: StateType;\n  active?: boolean;\n  disabled?: boolean;\n  visible?: boolean;\n  borderColor?: Color;\n  icon?: string;\n  size?: IconSize | number;\n  click?: any;\n}\n\nexport interface IClickStepEvent {\n  event: any;\n  step: IProgressBarStep;\n}\n\n@Component({\n  selector: 'mx-progress-bar',\n  templateUrl: './progress-bar.component.html',\n  styleUrls: ['./progress-bar.component.scss'],\n})\nexport class ProgressBarComponent implements OnInit {\n\n  @Input() config: IProgressBarConfig;\n  @Input() steps: IProgressBarStep[];\n\n  @Output() onClick: EventEmitter<IClickStepEvent> = new EventEmitter<IClickStepEvent>();\n\n  constructor(private stateService: StateService) {\n  }\n\n  ngOnInit() {\n  }\n\n  public backgroundColor(step: IProgressBarStep): Color {\n    return this.stateService.stateBackgroundColor(step.state);\n  }\n\n  public iconColor(step: IProgressBarStep): Color {\n    return this.stateService.stateTextColor(step.state);\n  }\n\n  private getActiveIndex(): number {\n    return this.steps.findIndex(step => !!step.active) || 0;\n  }\n\n  public get value() {\n    const doneCount = this.getActiveIndex() + 1;\n    return Utils.roundNumber(doneCount / this.steps.length, 1);\n  }\n\n  public get activeStep(): IProgressBarStep {\n    return this.steps.find(s => s.active);\n  }\n\n  public clickHandler(event, step: IProgressBarStep) {\n    this.onClick.emit({event, step});\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"colors\";\n\n.progress-bar-container {\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  justify-content: center;\n  align-itrems: center;\n\n  &.bottom {\n    flex-direction: column-reverse;\n    height: 0;\n  }\n\n  &.left {\n    flex-direction: column-reverse;\n    justify-content: flex-start;\n    align-itrems: normal;\n  }\n\n  &.right {\n    flex-direction: column-reverse;\n    justify-content: flex-end;\n    align-itrems: normal;\n  }\n\n  .progress-bar-line-and-steps-container {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    width: 100%;\n\n    .progress-bar-step-container {\n      width: 100%;\n      display: flex;\n      flex-direction: row;\n      justify-content: space-between;\n      height: 0rem;\n      z-index: 1;\n      align-items: center;\n\n      &.left {\n        flex-direction: column;\n        align-itrems: revert;\n      }\n\n      &.right {\n        flex-direction: column;\n        align-itrems: flex-end;\n      }\n\n      .progress-bar-step {\n        border: 0.1rem;\n        border-style: solid;\n        border-color: $color-tertiary;\n        background: white;\n        border-radius: 100%;\n        width: 2rem;\n        height: 2rem;\n\n        &.left,\n        &.right {\n          margin: 1rem;\n        }\n\n        &.visible {\n          visibility: visible;\n        }\n\n        &.selected {\n          color: #2dc86b;\n          border-color: #2dc86b;\n        }\n\n        &.disabled {\n        }\n      }\n    }\n\n    .progress-line {\n      display: flex;\n      width: 99%;\n      align-self: center;\n      height: 0;\n\n      .progress-bar-line {\n        height: 0.6em;\n        align-self: center;\n        box-shadow: $color-shadow;\n\n      }\n    }\n  }\n\n  .progress-bar-step-title {\n    padding-top: 2rem;\n    font-size: 0.8rem;\n    font-weight: normal;\n    align-self: center;\n    color: $color-gray-dark;\n    &.top {\n      align-self: center;\n    }\n\n    &.left {\n      align-self: flex-start;\n    }\n\n    &.right {\n      align-self: flex-end;\n    }\n\n    &.bottom {\n\n    }\n  }\n\n}\n\n",
                    "styleUrl": "./progress-bar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "stateService",
                        "type": "StateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 52,
                "jsdoctags": [
                    {
                        "name": "stateService",
                        "type": "StateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "value": {
                    "name": "value",
                    "getSignature": {
                        "name": "value",
                        "type": "",
                        "returnType": "",
                        "line": 72
                    }
                },
                "activeStep": {
                    "name": "activeStep",
                    "getSignature": {
                        "name": "activeStep",
                        "type": "",
                        "returnType": "IProgressBarStep",
                        "line": 77
                    }
                }
            },
            "templateData": "<div class=\"progress-bar-container {{config?.position}}\">\n  <div class=\"progress-bar-line-and-steps-container\">\n    <div class=\"progress-bar-step-container {{config?.position}}\">\n      <mx-checkbox *ngFor=\"let step of steps; let index = i\"\n                   [color]=\"iconColor(step)\"\n                   [background]=\"backgroundColor(step)\"></mx-checkbox>\n    </div>\n    <div class=\"progress-line\">\n      <ion-progress-bar class=\"progress-bar-line\"\n                        color=\"primary\"\n                        [value]=\"value\">\n      </ion-progress-bar>\n    </div>\n\n  </div>\n  <div [style.font-weight]=\"config?.fontWeight\"\n       [style.font-size]=\"config?.fontSize\"\n       class=\"progress-bar-step-title {{config?.titlePosition}}\">\n    {{(activeStep || steps[0])?.title | translate}}\n  </div>\n</div>\n\n\n"
        },
        {
            "name": "PropertyDetailsComponent",
            "id": "component-PropertyDetailsComponent-b1278fbbcfeba94a17dac97031ffe4fdb4f3d07a2f92177db0efcd870de1b4a070c1bdc5700c099b935d42f614e15c7e7bb112b92b16fd7611800324dc8ad729",
            "file": "src/app/property-details/property-details.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mx-property-details",
            "styleUrls": [
                "./property-details.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./property-details.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'mx-property-details',\n  templateUrl: './property-details.component.html',\n  styleUrls: ['./property-details.component.scss'],\n})\nexport class PropertyDetailsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {}\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./property-details.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>\n  property-details works!\n</p>\n"
        },
        {
            "name": "RadioButtonComponent",
            "id": "component-RadioButtonComponent-c5f26cdb6796d4ce520ee37cb9aa2a8111144552e5f0343a3fee87a225c6630cb4c1c6490f80358a5a1bc4d252a4c52d047bab5922be5d11ea8d5e4a0ac3b220",
            "file": "src/app/shared/components/radio-button/radio-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mx-radio-button",
            "styleUrls": [
                "./radio-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./radio-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'mx-radio-button',\n  templateUrl: './radio-button.component.html',\n  styleUrls: ['./radio-button.component.scss'],\n})\nexport class RadioButtonComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {}\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./radio-button.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>\n  radio-button works!\n</p>\n"
        },
        {
            "name": "SearchFiltersComponent",
            "id": "component-SearchFiltersComponent-84ea357b5adceeda759ca85302f7e66dfbcdd00cf66cc6a01791a2b52ed47b227afc63022269331a02b6c4b0d579316c9e3f125009d669361a2a5ee60dd678e5",
            "file": "src/app/search-filters/search-filters.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mx-search-filters",
            "styleUrls": [
                "./search-filters.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./search-filters.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'mx-search-filters',\n  templateUrl: './search-filters.component.html',\n  styleUrls: ['./search-filters.component.scss'],\n})\nexport class SearchFiltersComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {}\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./search-filters.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>\n  search-filters works!\n</p>\n"
        },
        {
            "name": "SelectInputComponent",
            "id": "component-SelectInputComponent-b2c1c1b7a2fbc8f2d8a668f7007bc5651763c9cf67727ef789d2ae416a22e5c8eae399211733fb1dcc51e48a4aa0b2caaf5586e0ee429885652478b84e851f8b",
            "file": "src/app/shared/components/select-input/select-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mx-select-input",
            "styleUrls": [
                "./select-input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./select-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'mx-select-input',\n  templateUrl: './select-input.component.html',\n  styleUrls: ['./select-input.component.scss'],\n})\nexport class SelectInputComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {}\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./select-input.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>\n  select-input works!\n</p>\n"
        },
        {
            "name": "SwitchToggleComponent",
            "id": "component-SwitchToggleComponent-7efc3c442a66b0313e8bb0f13c5e8e021c8da202ab2d4b4a8f0d82ba9dc72eb07441de1e7ac93c557092a5458434171040cc022f1fced77772b72b3ecb0be487",
            "file": "src/app/shared/components/switch-toggle/switch-toggle.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mx-switch-toggle",
            "styleUrls": [
                "./switch-toggle.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./switch-toggle.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'mx-switch-toggle',\n  templateUrl: './switch-toggle.component.html',\n  styleUrls: ['./switch-toggle.component.scss'],\n})\nexport class SwitchToggleComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {}\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./switch-toggle.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>\n  switch-toggle works!\n</p>\n"
        },
        {
            "name": "Tab1Page",
            "id": "component-Tab1Page-b3921e1f09354aa612991fa77a24a1fdcabe65b9d6ea7eb5da771bd1789004ebf82241482c775b463027b84222ab2f076cf1ec02b651393dd3b5898dc70bc267",
            "file": "src/app/tabs/tab1-home/tab1.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mx-tab1",
            "styleUrls": [
                "tab1.page.scss"
            ],
            "styles": [],
            "templateUrl": [
                "tab1.page.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "items",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "generateItems",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component} from '@angular/core';\n\n@Component({\n  selector: 'mx-tab1',\n  templateUrl: 'tab1.page.html',\n  styleUrls: ['tab1.page.scss']\n})\nexport class Tab1Page {\n\n  items: any[] = [];\n\n  constructor() {\n    this.generateItems();\n  }\n\n  generateItems() {\n    for (let i = 0; i < 1000; i++) {\n      this.items.push({\n        name: i + ' - ' + images[rotateImg],\n        imgSrc: getImgSrc(),\n        avatarSrc: getImgSrc(),\n        imgHeight: Math.floor(Math.random() * 50 + 150),\n        content: lorem.substring(0, Math.random() * (lorem.length - 100) + 100)\n      });\n      rotateImg++;\n      if (rotateImg === images.length) {\n        rotateImg = 0;\n      }\n    }\n  }\n}\n\n\nconst lorem = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, seddo eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.';\n\nconst images = [\n  'bandit',\n  'batmobile',\n  'blues-brothers',\n  'bueller',\n  'delorean',\n  'eleanor',\n  'general-lee',\n  'ghostbusters',\n  'knight-rider',\n  'mirth-mobile'\n];\n\nfunction getImgSrc() {\n  const src = 'https://dummyimage.com/600x400/${Math.round( Math.random() * 99999)}/fff.png';\n  rotateImg++;\n  if (rotateImg === images.length) {\n    rotateImg = 0;\n  }\n  return src;\n}\n\nlet rotateImg = 0;\n\n\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\nimg {\n  width: 100%;\n  height: 100%;\n}\n\n.card {\n  position: relative;\n\n}\n\n.overlay-top {\n  width: 100%;\n  height: 60px;\n  position: absolute;\n  z-index: 99;\n  top: 0px;\n  opacity: 0.9;\n}\n\n.overlay-bototm {\n  width: 100%;\n  height: 60px;\n  position: absolute;\n  z-index: 99;\n  top: 0px;\n  opacity: 0.9;\n}\n\n",
                    "styleUrl": "tab1.page.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "templateData": "<ion-header [translucent]=\"true\">\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <!--  add listing-->\n      <ion-button size=\"large\"\n                  color=\"primary\"\n                  [routerLink]=\"['/addProperty']\">\n        <ion-icon slot=\"icon-only\" name=\"add-outline\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n    <ion-buttons slot=\"secondary\">\n      <!-- open map-->\n      <ion-button\n        color=\"primary\"\n        size=\"large\"\n        [routerLink]=\"['/map']\">\n        <ion-icon slot=\"icon-only\" name=\"map-outline\"></ion-icon>\n      </ion-button>\n      <!-- change grid-->\n      <ion-button\n        color=\"primary\"\n        size=\"large\">\n        <ion-icon slot=\"icon-only\" name=\"grid-outline\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n    <!--list sort by-->\n    <ion-buttons slot=\"primary\">\n      <ion-button\n        color=\"primary\"\n        size=\"large\">\n        <ion-icon slot=\"icon-only\" name=\"reorder-four-outline\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<!--<ion-item-sliding>-->\n  <!-- Options -->\n<!--  <ion-item-options side=\"end\">-->\n<!--    <ion-item-option color=\"primary\">-->\n<!--      <div slot=\"icon-only\">-->\n<!--        <ion-icon size=\"large\" name=\"heart-outline\"></ion-icon>-->\n<!--      </div>-->\n<!--    </ion-item-option>-->\n<!--    <ion-item-option color=\"secondary\">-->\n<!--      <div slot=\"icon-only\">-->\n<!--        <ion-icon size=\"large\" name=\"arrow-redo-outline\"></ion-icon>-->\n<!--      </div>-->\n<!--    </ion-item-option>-->\n<!--  </ion-item-options>-->\n<!--</ion-item-sliding>-->\n\n<ion-content padding [fullscreen]=\"true\">\n  <ion-card>\n    <div>\n      <ion-img [src]=\"items[0].imgSrc\" [alt]=\"items[0].name\"></ion-img>\n    </div>\n    <ion-card-content>\n      <ion-row class=\"ion-align-items-stretch\">\n        <ion-col>\n          <ion-item lines=\"none\">\n            <ion-label>\n              New York, 121 Avenue\n            </ion-label>\n            <ion-icon name=\"information-circle\" size=\"small\" slot=\"end\"></ion-icon>\n          </ion-item>\n        </ion-col>\n      </ion-row>\n      <!--        <ion-col class=\"ion-padding-end ion-text-end\">-->\n      <!--          <ion-text>20,000,000</ion-text>-->\n      <!--        </ion-col>-->\n      <ion-row class=\"ion-justify-content-around\">\n        <ion-col>\n          <!--            <ion-item lines=\"none\" class=\"\">-->\n          <!--              <ion-icon class=\"icon\" size=\"small\" name=\"apps-outline\"></ion-icon>-->\n          <!--              <ion-text class=\"\">212</ion-text>-->\n          <!--              <ion-text class=\"\">Meters</ion-text>-->\n          <!--            </ion-item>-->\n        </ion-col>\n        <ion-col>\n          <!--            <ion-item lines=\"none\">-->\n          <!--              <ion-icon class=\"icon\" size=\"small\" name=\"apps-outline\"></ion-icon>-->\n          <!--              <ion-text class=\"text\">3</ion-text>-->\n          <!--              <ion-text class=\"text\">Bedrooms</ion-text>-->\n          <!--            </ion-item>-->\n        </ion-col>\n        <ion-col>\n          <!--            <ion-item lines=\"none\">-->\n          <!--              <ion-icon class=\"icon\" size=\"small\" name=\"apps-outline\"></ion-icon>-->\n          <!--              <ion-text class=\"text\">1</ion-text>-->\n          <!--              <ion-text class=\"text\">Bathroom</ion-text>-->\n          <!--            </ion-item>-->\n        </ion-col>\n        <ion-col>\n          <!--            <ion-item lines=\"none\">-->\n          <!--              <ion-icon name=\"star\" slot=\"start\"></ion-icon>-->\n          <!--              <ion-label>-->\n          <!--                Icon Start-->\n          <!--              </ion-label>-->\n          <!--            </ion-item>-->\n          <!--            <ion-item lines=\"none\">-->\n          <!--              <ion-icon class=\"icon\" size=\"small\" name=\"apps-outline\"></ion-icon>-->\n          <!--              <ion- class=\"text\">4</ion->-->\n          <!--              <ion-text class=\"text\">Floor</ion-text>-->\n          <!--            </ion-item>-->\n        </ion-col>\n      </ion-row>\n    </ion-card-content>\n  </ion-card>\n  <!--  <ion-card>-->\n  <!--    <ion-item-sliding>-->\n  <!--      <ion-item>-->\n  <!--        <div>-->\n  <!--          <ion-img [src]=\"items[0].imgSrc\" [alt]=\"items[0].name\"></ion-img>-->\n  <!--        </div>-->\n  <!--        <ion-card-content>-->\n  <!--          <ion-row class=\"ion-align-items-stretch\">-->\n  <!--            <ion-col>-->\n  <!--              <div class=\"icon-text\">-->\n  <!--                <ion-icon class=\"icon\" size=\"normal\" name=\"apps-outline\"></ion-icon>-->\n  <!--                <ion-text class=\"text\">New York, 121 Avenue</ion-text>-->\n  <!--              </div>-->\n  <!--            </ion-col>-->\n  <!--            <ion-col class=\"ion-padding-end ion-text-end\">-->\n  <!--              <ion-text>20,000,000</ion-text>-->\n  <!--            </ion-col>-->\n  <!--          </ion-row>-->\n  <!--          <ion-row class=\"ion-justify-content-around\">-->\n  <!--            <ion-col class=\"ion-margin-horizontal\">-->\n  <!--              <div>-->\n  <!--                <ion-icon class=\"icon\" size=\"normal\" name=\"apps-outline\"></ion-icon>-->\n  <!--                <ion-text class=\"text\">212</ion-text>-->\n  <!--                <ion-text class=\"text\">Meters</ion-text>-->\n  <!--              </div>-->\n  <!--            </ion-col>-->\n  <!--            <ion-col>-->\n  <!--              <div>-->\n  <!--                <ion-icon class=\"icon\" size=\"normal\" name=\"apps-outline\"></ion-icon>-->\n  <!--                <ion-text class=\"text\">3</ion-text>-->\n  <!--                <ion-text class=\"text\">Bedrooms</ion-text>-->\n  <!--              </div>-->\n  <!--            </ion-col>-->\n  <!--            <ion-col>-->\n  <!--              <div>-->\n  <!--                <ion-icon class=\"icon\" size=\"normal\" name=\"apps-outline\"></ion-icon>-->\n  <!--                <ion-text class=\"text\">1</ion-text>-->\n  <!--                <ion-text class=\"text\">Bathroom</ion-text>-->\n  <!--              </div>-->\n  <!--            </ion-col>-->\n  <!--            <ion-col>-->\n  <!--              <div>-->\n  <!--                <ion-icon class=\"icon\" size=\"normal\" name=\"apps-outline\"></ion-icon>-->\n  <!--                <ion-text class=\"text\">4</ion-text>-->\n  <!--                <ion-text class=\"text\">Floor</ion-text>-->\n  <!--              </div>-->\n  <!--            </ion-col>-->\n  <!--          </ion-row>-->\n  <!--        </ion-card-content>-->\n  <!--        &lt;!&ndash; Options &ndash;&gt;-->\n  <!--        <ion-item-options side=\"end\">-->\n  <!--          <ion-item-option color=\"primary\">-->\n  <!--            <div slot=\"icon-only\">-->\n  <!--              <ion-icon size=\"large\" name=\"heart-outline\"></ion-icon>-->\n  <!--            </div>-->\n  <!--          </ion-item-option>-->\n  <!--          <ion-item-option color=\"secondary\">-->\n  <!--            <div slot=\"icon-only\">-->\n  <!--              <ion-icon size=\"large\" name=\"arrow-redo-outline\"></ion-icon>-->\n  <!--            </div>-->\n  <!--          </ion-item-option>-->\n  <!--        </ion-item-options>-->\n  <!--      </ion-item>-->\n  <!--    </ion-item-sliding>-->\n  <!--  </ion-card>-->\n\n\n  <!--  <ion-virtual-scroll [items]=\"items\" approxItemHeight=\"320px\">-->\n  <!--    <ion-card class=\"card\" *virtualItem=\"let item; let itemBounds = bounds;\">-->\n  <!--      <div>-->\n  <!--        <ion-img [src]=\"item.imgSrc\" [alt]=\"item.name\"></ion-img>-->\n  <!--      </div>-->\n  <!--      <ion-card-content class=\"overlay-top\">-->\n  <!--        <ion-row>-->\n  <!--          <ion-col class=\"ion-padding-top\">-->\n  <!--            <div>-->\n  <!--              <h3>Land</h3>-->\n  <!--            </div>-->\n  <!--          </ion-col>-->\n  <!--        </ion-row>-->\n  <!--      </ion-card-content>-->\n  <!--      <ion-card-content>-->\n  <!--        <ion-row class=\"ion-align-items-stretch\">-->\n  <!--          <ion-col>-->\n  <!--            <ion-item lines=\"none\" class=\"icon-text\">-->\n  <!--              <ion-icon class=\"icon\" size=\"normal\" name=\"apps-outline\"></ion-icon>-->\n  <!--              <ion-text class=\"text\">New York City, NY 12120</ion-text>-->\n  <!--            </ion-item>-->\n  <!--          </ion-col>-->\n  <!--        </ion-row>-->\n  <!--        <ion-row class=\"ion-align-items-stretch\">-->\n  <!--          <ion-col>-->\n  <!--            <ion-item lines=\"none\" class=\"icon-text\">-->\n  <!--              <ion-icon class=\"icon\" size=\"normal\" name=\"apps-outline\"></ion-icon>-->\n  <!--              <ion-text class=\"text\">2</ion-text>-->\n  <!--              <ion-text class=\"text\">{{'BEDROOMS' | translate}}</ion-text>-->\n  <!--            </ion-item>-->\n  <!--          </ion-col>-->\n  <!--          <ion-col>-->\n  <!--            <ion-item lines=\"none\" class=\"icon-text\">-->\n  <!--              <ion-icon class=\"icon\" size=\"normal\" name=\"apps-outline\"></ion-icon>-->\n  <!--              <ion-text class=\"text\">44</ion-text>-->\n  <!--            </ion-item>-->\n  <!--          </ion-col>-->\n  <!--          <ion-col>-->\n  <!--            <ion-item lines=\"none\" class=\"icon-text\">-->\n  <!--              <ion-icon class=\"icon\" size=\"normal\" name=\"apps-outline\"></ion-icon>-->\n  <!--            </ion-item>-->\n  <!--          </ion-col>-->\n  <!--          <ion-col>-->\n  <!--            <ion-item lines=\"none\" class=\"icon-text\">-->\n  <!--              <ion-icon class=\"icon\" size=\"normal\" name=\"apps-outline\"></ion-icon>-->\n  <!--            </ion-item>-->\n  <!--          </ion-col>-->\n  <!--          <ion-col>-->\n  <!--            <ion-item lines=\"none\" class=\"icon-text\">-->\n  <!--              <ion-icon class=\"icon\" size=\"normal\" name=\"apps-outline\"></ion-icon>-->\n  <!--            </ion-item>-->\n  <!--          </ion-col>-->\n  <!--        </ion-row>-->\n  <!--      </ion-card-content>-->\n  <!--    </ion-card>-->\n  <!--  </ion-virtual-scroll>-->\n</ion-content>\n"
        },
        {
            "name": "Tab2Page",
            "id": "component-Tab2Page-c72e582d872e9dca70cfaf68a7eca696d9c5d9052f46c7ec5b883a3645c2f5bf493ae184a9a6b212fa87924b4c40dcfb9fd4896031174817261195ffa531176e",
            "file": "src/app/tabs/tab2-search/tab2.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mx-tab2",
            "styleUrls": [
                "tab2.page.scss"
            ],
            "styles": [],
            "templateUrl": [
                "tab2.page.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'mx-tab2',\n  templateUrl: 'tab2.page.html',\n  styleUrls: ['tab2.page.scss']\n})\nexport class Tab2Page {\n\n  constructor() {}\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "tab2.page.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "templateData": "<ion-header [translucent]=\"true\">\n  <ion-toolbar>\n    <ion-title>\n      {{'TAB2_TITLE' | translate}}\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content [fullscreen]=\"true\">\n  <ion-header collapse=\"condense\">\n    <ion-toolbar>\n      <ion-title size=\"large\">{{'TAB2_TITLE' | translate}}</ion-title>\n    </ion-toolbar>\n  </ion-header>\n</ion-content>\n"
        },
        {
            "name": "Tab3Page",
            "id": "component-Tab3Page-8badd5fc0292c4af89237b9c9878c4477342c71583a08063157e4cf9046b5e9f134709fb3d8d93ab70f99732ae51d9e8f13b2e0de3eccf2d2ad1f4301a4d0c44",
            "file": "src/app/tabs/tab3-categories/tab3.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mx-tab3",
            "styleUrls": [
                "tab3.page.scss"
            ],
            "styles": [],
            "templateUrl": [
                "tab3.page.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "items",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [
                {
                    "name": "generateItems",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component} from '@angular/core';\n\n@Component({\n  selector: 'mx-tab3',\n  templateUrl: 'tab3.page.html',\n  styleUrls: ['tab3.page.scss']\n})\nexport class Tab3Page {\n  items: any[] = [];\n\n  constructor() {\n    this.generateItems();\n  }\n\n  generateItems() {\n    for (let i = 0; i < 1000; i++) {\n      this.items.push({\n        name: i + ' - ' + images[rotateImg],\n        imgSrc: getImgSrc(),\n        avatarSrc: getImgSrc(),\n        imgHeight: Math.floor(Math.random() * 50 + 150),\n        content: lorem.substring(0, Math.random() * (lorem.length - 100) + 100)\n      });\n      rotateImg++;\n      if (rotateImg === images.length) {\n        rotateImg = 0;\n      }\n    }\n  }\n}\n\n\nconst lorem = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, seddo eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.';\n\nconst images = [\n  'bandit',\n  'batmobile',\n  'blues-brothers',\n  'bueller',\n  'delorean',\n  'eleanor',\n  'general-lee',\n  'ghostbusters',\n  'knight-rider',\n  'mirth-mobile'\n];\n\nfunction getImgSrc() {\n  const src = 'https://dummyimage.com/600x400/${Math.round( Math.random() * 99999)}/fff.png';\n  rotateImg++;\n  if (rotateImg === images.length) {\n    rotateImg = 0;\n  }\n  return src;\n}\n\nlet rotateImg = 0;\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"colors\";\n\n.slides-horizontal {\n  height: 200px;\n}\n.card-background-page {\n  ion-card {\n    position: relative;\n    text-align: center;\n  }\n\n  .card-title {\n    position: absolute;\n    top: 36%;\n    font-size: 2.0em;\n    width: 100%;\n    font-weight: bold;\n    color: #fff;\n  }\n\n  .card-subtitle {\n    font-size: 1.0em;\n    position: absolute;\n    top: 52%;\n    width: 100%;\n    color: #fff;\n  }\n}\n",
                    "styleUrl": "tab3.page.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "templateData": "<ion-header [translucent]=\"true\">\n  <ion-toolbar>\n    <ion-title>\n      {{'TAB3_TITLE' | translate}}\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"card-background-page\">\n  <ion-slides class=\"slides-horizontal\">\n    <ion-slide>\n      <ion-card>\n        <img src=\"{{items[0].imgSrc}}\"/>\n        <div class=\"card-title\">Amsterdam</div>\n        <div class=\"card-subtitle\">64 Listings</div>\n      </ion-card>\n    </ion-slide>\n    <ion-slide>\n      <ion-card>\n        <img src=\"{{items[0].imgSrc}}\"/>\n        <div class=\"card-title\">Amsterdam</div>\n        <div class=\"card-subtitle\">64 Listings</div>\n      </ion-card>\n    </ion-slide>\n    <ion-slide>\n      <ion-card>\n        <img src=\"{{items[0].imgSrc}}\"/>\n        <div class=\"card-title\">San Francisco</div>\n        <div class=\"card-subtitle\">72 Listings</div>\n      </ion-card>\n    </ion-slide>\n  </ion-slides>\n\n  <ion-card>\n    <img src=\"{{items[0].imgSrc}}\"/>\n    <div class=\"card-title\">Apartments</div>\n    <div class=\"card-subtitle\">41 Listings</div>\n  </ion-card>\n  <ion-card>\n    <img src=\"{{items[0].imgSrc}}\"/>\n    <div class=\"card-title\">Condos</div>\n    <div class=\"card-subtitle\">64 Listings</div>\n  </ion-card>\n  <ion-card>\n    <img src=\"{{items[0].imgSrc}}\"/>\n    <div class=\"card-title\">Duplexes</div>\n    <div class=\"card-subtitle\">72 Listings</div>\n  </ion-card>\n  <ion-card>\n    <img src=\"{{items[0].imgSrc}}\"/>\n    <div class=\"card-title\">Clinics</div>\n    <div class=\"card-subtitle\">28 Listings</div>\n  </ion-card>\n\n</ion-content>\n"
        },
        {
            "name": "Tab4Page",
            "id": "component-Tab4Page-692dd8d4f076e646e8450558edd2f38b76b515909b0b62201f1eaa51228709e8de294a980b166b8c3a3fd053eab957a8c80e7032518eb69abd98cfcde2f37e2b",
            "file": "src/app/tabs/tab4-profile/tab4.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mx-tab4",
            "styleUrls": [
                "tab4.page.scss"
            ],
            "styles": [],
            "templateUrl": [
                "tab4.page.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component} from '@angular/core';\n\n@Component({\n  selector: 'mx-tab4',\n  templateUrl: 'tab4.page.html',\n  styleUrls: ['tab4.page.scss']\n})\nexport class Tab4Page {\n\n  constructor() {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "tab4.page.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "templateData": "<ion-header [translucent]=\"true\">\n  <ion-toolbar>\n    <ion-title>\n      {{'TAB4_TITLE' | translate}}\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content [fullscreen]=\"true\">\n  <ion-header collapse=\"condense\">\n    <ion-toolbar>\n      <ion-title size=\"large\">{{'TAB4_TITLE' | translate}}</ion-title>\n    </ion-toolbar>\n  </ion-header>\n</ion-content>\n"
        },
        {
            "name": "TabsPage",
            "id": "component-TabsPage-c9cf723922624c443bf8db7c301ea1726c0988210f0a542e646a9c28a23a67364fa71a725516e68e02613400d23a8f97827c81853c0fa54cc583e7e8cd15b08f",
            "file": "src/app/tabs/tabs.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mx-tabs",
            "styleUrls": [
                "tabs.page.scss"
            ],
            "styles": [],
            "templateUrl": [
                "tabs.page.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component} from '@angular/core';\n\n@Component({\n  selector: 'mx-tabs',\n  templateUrl: 'tabs.page.html',\n  styleUrls: ['tabs.page.scss']\n})\nexport class TabsPage {\n\n  constructor() {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\n",
                    "styleUrl": "tabs.page.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "templateData": "<ion-tabs>\n  <ion-tab-bar slot=\"bottom\">\n    <ion-tab-button tab=\"home\">\n      <ion-icon name=\"home-outline\"></ion-icon>\n      <ion-label>{{'TAB1_TITLE' | translate}}</ion-label>\n    </ion-tab-button>\n    <ion-tab-button [routerLink]=\"['/search-filters']\">\n      <ion-icon name=\"search-sharp\"></ion-icon>\n      <ion-label>{{'TAB2_TITLE' | translate}}</ion-label>\n    </ion-tab-button>\n\n    <ion-tab-button tab=\"categories\">\n      <ion-icon name=\"menu\"></ion-icon>\n      <ion-label>{{'TAB3_TITLE' | translate}}</ion-label>\n    </ion-tab-button>\n\n    <ion-tab-button tab=\"profile\">\n      <ion-icon name=\"person\"></ion-icon>\n      <ion-label>{{'TAB4_TITLE' | translate}}</ion-label>\n    </ion-tab-button>\n  </ion-tab-bar>\n\n</ion-tabs>\n"
        },
        {
            "name": "TextComponent",
            "id": "component-TextComponent-45a5680fbf8e263e232b42369cab2b64bce652db8ba3fdfe81036f2c1b9fbff847d64bdac07be1aa789166397b1db1b6d4c16d9b41631c3575bbe8b4a74bff47",
            "file": "src/app/shared/components/text/text.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mx-text",
            "styleUrls": [
                "./text.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./text.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "Color",
                    "decorators": []
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "TextType",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "clickHandler",
                    "args": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Color} from '../../enums';\n\nexport enum TextType {\n  header = 'header',\n  title = 'title',\n  button = 'button',\n  sectionTitle = 'sectionTitle',\n  description = 'description',\n  label = 'label',\n  placeholder = 'placeholder',\n  segment = 'segment'\n}\n\n@Component({\n  selector: 'mx-text',\n  templateUrl: './text.component.html',\n  styleUrls: ['./text.component.scss'],\n})\nexport class TextComponent implements OnInit {\n\n  @Input() title: string;\n  @Input() type: TextType;\n  @Input() color: Color;\n\n  @Output() onClick: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  public clickHandler($event) {\n    if (this.type === TextType.button) {\n      this.onClick.emit($event);\n    }\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"fonts\";\n@import \"colors\";\n@import \"common\";\n\n.text {\n  font-family: $font-family;\n\n  &.header {\n    font-weight: $font-weight-600;\n    font-size: $font-size-26;\n  }\n\n  &.sectionTitle {\n    font-size: $font-size-normal;\n    font-weight: $font-weight-500;\n  }\n\n  &.title {\n    font-size: $font-size-normal;\n    font-weight: $font-weight-600;\n  }\n\n  &.description {\n    font-size: $font-size-tiny;\n  }\n\n  &.segment {\n    font-size: 2vw;\n  }\n\n  &.button,\n  &.label {\n    font-size: $font-size-normal;\n    font-weight: $font-weight-500;\n  }\n}\n\n\n\n",
                    "styleUrl": "./text.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 26
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ion-text (click)=\"clickHandler($event)\"\n          class=\"text {{type}}\"\n          [style.color]=\"color\">\n  {{title}}\n</ion-text>\n\n"
        },
        {
            "name": "UploadMediaButtonComponent",
            "id": "component-UploadMediaButtonComponent-35fad274c5faf59c0578ca90540dea1428c92c116ce6c1ac3cdd479bfd87bced916d972694733a164fff5b19db401dcb792a81f6ea59978e7205f4bf79b6a86e",
            "file": "src/app/shared/components/upload-media-button/upload-media-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mx-upload-media-button",
            "styleUrls": [
                "./upload-media-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./upload-media-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'mx-upload-media-button',\n  templateUrl: './upload-media-button.component.html',\n  styleUrls: ['./upload-media-button.component.scss'],\n})\nexport class UploadMediaButtonComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {}\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./upload-media-button.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>\n  upload-media-button works!\n</p>\n"
        }
    ],
    "modules": [
        {
            "name": "AddPropertyModule",
            "id": "module-AddPropertyModule-37323df1cc7ce2b9860a2f464dfff20ab7a94dcacb300b3c2c3504a3dc5b1709c5ae0f8590bfae1a511f536c5572758729bc09636f3723f1f7eda1c545a04929",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/add-property/add-property.module.ts",
            "methods": [],
            "sourceCode": "import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {AddPropertyComponent} from './add-property.component';\nimport {IonicModule} from '@ionic/angular';\nimport {FormsModule} from '@angular/forms';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {AddPropertyRoutingModule} from './add-property-routing.module';\nimport {AddLocationComponent} from './add-location/add-location.component';\nimport {AddPropertyDetailsComponent} from './add-property-details/add-property-details.component';\nimport {AddRoomDetailsComponent} from './add-room-details/add-room-details.component';\nimport {AddMediaComponent} from './add-media/add-media.component';\nimport {AddPriceAndAgreementComponent} from './add-price-and-agreement/add-price-and-agreement.component';\nimport {AddOpenDoorEventComponent} from './add-open-door-event/add-open-door-event.component';\nimport {SharedModule} from '../shared/shared.module';\nimport {MapModule} from '../map/map.module';\n\n\n@NgModule({\n  declarations: [\n    AddPropertyComponent,\n    AddLocationComponent,\n    AddPropertyDetailsComponent,\n    AddRoomDetailsComponent,\n    AddMediaComponent,\n    AddPriceAndAgreementComponent,\n    AddOpenDoorEventComponent],\n    imports: [\n        AddPropertyRoutingModule,\n        FormsModule,\n        TranslateModule,\n        IonicModule,\n        CommonModule,\n        SharedModule,\n        MapModule,\n    ]\n})\nexport class AddPropertyModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AddLocationComponent"
                        },
                        {
                            "name": "AddMediaComponent"
                        },
                        {
                            "name": "AddOpenDoorEventComponent"
                        },
                        {
                            "name": "AddPriceAndAgreementComponent"
                        },
                        {
                            "name": "AddPropertyComponent"
                        },
                        {
                            "name": "AddPropertyDetailsComponent"
                        },
                        {
                            "name": "AddRoomDetailsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AddPropertyRoutingModule"
                        },
                        {
                            "name": "MapModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AddPropertyRoutingModule",
            "id": "module-AddPropertyRoutingModule-ce9b1ef76d26d548da85cbc518ce326ed5cceeeb29a66c8c1d0481060a420beaa96b4a717ec52d7c655e84fe2ac66a61dbff1ededdac42cfa88ac8b783e378f3",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/add-property/add-property-routing.module.ts",
            "methods": [],
            "sourceCode": "import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {AddPropertyComponent, AddPropertyScreen} from './add-property.component';\nimport {AddLocationComponent} from './add-location/add-location.component';\nimport {AddPropertyDetailsComponent} from './add-property-details/add-property-details.component';\nimport {AddRoomDetailsComponent} from './add-room-details/add-room-details.component';\nimport {AddMediaComponent} from './add-media/add-media.component';\nimport {AddPriceAndAgreementComponent} from './add-price-and-agreement/add-price-and-agreement.component';\nimport {AddOpenDoorEventComponent} from './add-open-door-event/add-open-door-event.component';\n\nconst addPropertyChildren = [{\n  path: AddPropertyScreen.location,\n  component: AddLocationComponent\n}, {\n  path: AddPropertyScreen.propertyDetails,\n  component: AddPropertyDetailsComponent\n}, {\n  path: AddPropertyScreen.roomDetails,\n  component: AddRoomDetailsComponent\n}, {\n  path: AddPropertyScreen.media,\n  component: AddMediaComponent\n}, {\n  path: AddPropertyScreen.priceAndAgreement,\n  component: AddPriceAndAgreementComponent\n}, {\n  path: AddPropertyScreen.openDoorEvent,\n  component: AddOpenDoorEventComponent\n}, {\n  path: '',\n  redirectTo: AddPropertyScreen.location,\n  pathMatch: 'full'\n}];\n\nconst routes: Routes = [\n  {\n    path: '', component: AddPropertyComponent,\n    children: addPropertyChildren\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AddPropertyRoutingModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppModule",
            "id": "module-AppModule-5479663b73fb9f6876d62c0d60fdf0d9900ebce330a07123ca66232ad3fd3ebf3404827c72cb2d38e44c600405609fdb666238a8edc52eb0c250858551027134",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import {CUSTOM_ELEMENTS_SCHEMA, NgModule, NO_ERRORS_SCHEMA} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {RouteReuseStrategy, RouterModule} from '@angular/router';\n\nimport {IonicModule, IonicRouteStrategy} from '@ionic/angular';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {TranslateLoader, TranslateModule} from '@ngx-translate/core';\nimport {HttpClient, HttpClientModule} from '@angular/common/http';\nimport {SharedModule} from './shared/shared.module';\nimport {MapModule} from './map/map.module';\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\n\n// AoT requires an exported function for factories\nexport function HttpLoaderFactory(http: HttpClient) {\n  return new TranslateHttpLoader(http);\n}\n\n@NgModule({\n  declarations: [AppComponent],\n  entryComponents: [],\n  imports: [BrowserModule,\n    RouterModule,\n    HttpClientModule,\n    AppRoutingModule,\n    SharedModule,\n    IonicModule.forRoot(),\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient]\n      }\n    }),\n    MapModule],\n  providers: [{provide: RouteReuseStrategy, useClass: IonicRouteStrategy}],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "MapModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-dbc9803102929343730bd8539e35eb359912a08b349a3bc0ff81382b4a857eb8f2f916a3df8c8a189dabfb61690eb3118614a5537904069a0b5b6b8eb4a89f81",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import {NgModule} from '@angular/core';\nimport {PreloadAllModules, RouterModule, Routes} from '@angular/router';\nimport {environment} from '../environments/environment';\n\nconst routes: Routes = [\n  {path: '', loadChildren: () => \"import('./tabs/tabs.module').then(m => m.TabsPageModule)\"},\n  {\n    path: 'addProperty',\n    loadChildren: () => \"import('./add-property/add-property.module').then(m => m.AddPropertyModule)\"\n  },\n  {\n    path: 'propertyDetails',\n    loadChildren: () => \"import('./property-details/property-details.module').then(m => m.PropertyDetailsModule)\"\n  },\n  {\n    path: 'map',\n    loadChildren: () => \"import('./map/map.module').then(m => m.MapModule)\"\n  },\n  {\n    path: 'search-filters',\n    loadChildren: () => \"import('./search-filters/search-filters.module').then(m => m.SearchFiltersModule)\"\n  },\n  {\n    path: 'categories',\n    loadChildren: () => \"import('./categories/categories.module').then(m => m.CategoriesModule)\"\n  },\n  {\n    path: 'profile',\n    loadChildren: () => \"import('./profile/profile.module').then(m => m.ProfileModule)\"\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      preloadingStrategy: PreloadAllModules,\n      enableTracing: false  // !environment.production\n    })\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CategoriesModule",
            "id": "module-CategoriesModule-f98140c55b8c8b5489de815c0ea742bdfd4244ee94326017e4f388ada7f380841fdaf813114fe0b036e807f787ee96c53fe3bf0a907f097ad480d51c111d002d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/categories/categories.module.ts",
            "methods": [],
            "sourceCode": "import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {CategoriesRoutingModule} from './categories-routing.module';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    CategoriesRoutingModule\n  ]\n})\nexport class CategoriesModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CategoriesRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CategoriesRoutingModule",
            "id": "module-CategoriesRoutingModule-2dd13ed7aa1bdfc691183bd7c54148c9b13d33bba02dbd97cc0b01464aaccfa0617ad638a47b8dd7b82afd27a2153001d5737a797c5ced5bc531d4c35ea48b68",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/categories/categories-routing.module.ts",
            "methods": [],
            "sourceCode": "import {RouterModule, Routes} from '@angular/router';\nimport {NgModule} from '@angular/core';\nimport {CategoriesComponent} from './categories.component';\n\nconst routes: Routes = [\n  {\n    path: '', component: CategoriesComponent,\n    children: []\n  }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CategoriesRoutingModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MapModule",
            "id": "module-MapModule-6949ac774484889647c09b522915476f1535994b045d09d420d035c2c1285cfdf09809dac8e5b9e32134fe7e68109c79df24e0f34510e5c24c540234d56ce45a",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/map/map.module.ts",
            "methods": [],
            "sourceCode": "import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MapComponent} from './map.component';\nimport {MapRoutingModule} from './map-routing.module';\nimport {IonicModule} from '@ionic/angular';\nimport {FormsModule} from '@angular/forms';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {LeafletModule} from '@asymmetrik/ngx-leaflet';\n\n@NgModule({\n  declarations: [MapComponent],\n  imports: [\n    CommonModule,\n    MapRoutingModule,\n    LeafletModule,\n    FormsModule,\n    TranslateModule,\n    IonicModule,\n    CommonModule,\n  ],\n  exports: [\n    MapComponent\n  ]\n})\nexport class MapModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "MapComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "MapRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "MapComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MapRoutingModule",
            "id": "module-MapRoutingModule-1136bdece45cf2b5c47a4bfd56b1bf16924927e5cbfc2eb5be795cb67e767b485e3e52536df19ba583336dfec29aeef55e75e0d929e67f6d3c4f1789239739b9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/map/map-routing.module.ts",
            "methods": [],
            "sourceCode": "import {RouterModule, Routes} from '@angular/router';\nimport {NgModule} from '@angular/core';\nimport {MapComponent} from './map.component';\n\nconst routes: Routes = [\n  {\n    path: '', component: MapComponent,\n    children: []\n  }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class MapRoutingModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ProfileModule",
            "id": "module-ProfileModule-d6e7be15d18834be9f4a1c37baa093061b47263babc623d3ef91a93d8ee8606ee5670aabb4c757283acd1d7ffb2b923a8f411df08391de5cdbe3cd893c493443",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/profile/profile.module.ts",
            "methods": [],
            "sourceCode": "import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ProfileComponent} from './profile.component';\nimport {IonicModule} from '@ionic/angular';\nimport {FormsModule} from '@angular/forms';\nimport {TranslateModule} from '@ngx-translate/core';\n\n\n@NgModule({\n  declarations: [ProfileComponent],\n  imports: [\n    IonicModule,\n    FormsModule,\n    TranslateModule,\n    IonicModule,\n    CommonModule,\n  ]\n})\nexport class ProfileModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ProfileComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PropertyDetailsModule",
            "id": "module-PropertyDetailsModule-2773c0e5c6bfec4c44c6e8a3891fcfec30e64f7e4915e4c92a860ddd909b2968e2ed6463b6f8d5570fd490fcd8aba3e7c03f99d8ae9ff83c4d94e5715c1fbd3d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/property-details/property-details.module.ts",
            "methods": [],
            "sourceCode": "import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {PropertyDetailsComponent} from './property-details.component';\n\n\n@NgModule({\n  declarations: [PropertyDetailsComponent],\n  imports: [\n    CommonModule\n  ]\n})\nexport class PropertyDetailsModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "PropertyDetailsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SearchFiltersModule",
            "id": "module-SearchFiltersModule-913eb0caaeb8275117245041acbea0fb19c1ba769dcf68f486bd51a19a292950f14d1d6d61a6d9ff9ed68b081ebdc97697aa7ff8aca463355a0c55b75ae666c5",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/search-filters/search-filters.module.ts",
            "methods": [],
            "sourceCode": "import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SearchFiltersComponent} from './search-filters.component';\nimport {SearchFiltersRoutingModule} from './search-filters-routing.module';\n\n\n@NgModule({\n  declarations: [SearchFiltersComponent],\n  imports: [\n    CommonModule,\n    SearchFiltersRoutingModule\n  ]\n})\nexport class SearchFiltersModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SearchFiltersComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SearchFiltersRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SearchFiltersRoutingModule",
            "id": "module-SearchFiltersRoutingModule-8beef75e642ed0683d2946333d2acbccd8fc205c08987a10a13303adc037a883a812c026e9fe9240cce67f4aa64e158675587db59106ec2c4f6aca7f2eac4ebf",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/search-filters/search-filters-routing.module.ts",
            "methods": [],
            "sourceCode": "import {RouterModule, Routes} from '@angular/router';\nimport {NgModule} from '@angular/core';\nimport {SearchFiltersComponent} from './search-filters.component';\n\nconst routes: Routes = [\n  {\n    path: '', component: SearchFiltersComponent,\n    children: []\n  }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SearchFiltersRoutingModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SharedModule",
            "id": "module-SharedModule-fdd3a988330efa7c46341937ae409cccecc149388840781c408760fe897e355904f24b28344253a77e419a6d5eb1de0f239a8dcc504f8f648d97599c58a394c6",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/shared.module.ts",
            "methods": [],
            "sourceCode": "import {NgModule} from '@angular/core';\nimport {ProgressBarComponent} from './components/progress-bar/progress-bar.component';\nimport {TextComponent} from './components/text/text.component';\nimport {IonicModule} from '@ionic/angular';\nimport {CheckboxComponent} from './components/checkbox/checkbox.component';\nimport {CategoriesComponent} from './components/categories/categories.component';\nimport {InputTextAreaComponent} from './components/input-textarea/input-textarea.component';\nimport {InputComponent} from './components/input/input.component';\nimport {CommonModule} from '@angular/common';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {PlusMinusToggleComponent} from './components/plus-minus-toggle/plus-minus-toggle.component';\nimport {ButtonListComponent} from './components/button-list/button-list.component';\n\n@NgModule({\n  declarations: [\n    ProgressBarComponent,\n    TextComponent,\n    InputComponent,\n    PlusMinusToggleComponent,\n    InputTextAreaComponent,\n    ButtonListComponent,\n    CategoriesComponent, CheckboxComponent],\n  entryComponents: [ProgressBarComponent,\n    TextComponent,\n    CategoriesComponent,\n    InputTextAreaComponent,\n    PlusMinusToggleComponent,\n    ButtonListComponent,\n    InputComponent],\n  imports: [\n    IonicModule,\n    CommonModule,\n    TranslateModule\n  ],\n  providers: [],\n  bootstrap: [],\n  exports: [\n    ProgressBarComponent,\n    CategoriesComponent,\n    TextComponent,\n    PlusMinusToggleComponent,\n    InputComponent,\n    InputTextAreaComponent,\n    ButtonListComponent\n  ]\n})\nexport class SharedModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ButtonListComponent"
                        },
                        {
                            "name": "CategoriesComponent"
                        },
                        {
                            "name": "CheckboxComponent"
                        },
                        {
                            "name": "InputComponent"
                        },
                        {
                            "name": "InputTextAreaComponent"
                        },
                        {
                            "name": "PlusMinusToggleComponent"
                        },
                        {
                            "name": "ProgressBarComponent"
                        },
                        {
                            "name": "TextComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ButtonListComponent"
                        },
                        {
                            "name": "InputComponent"
                        },
                        {
                            "name": "InputTextAreaComponent"
                        },
                        {
                            "name": "PlusMinusToggleComponent"
                        },
                        {
                            "name": "ProgressBarComponent"
                        },
                        {
                            "name": "TextComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "Tab1PageModule",
            "id": "module-Tab1PageModule-a917cb308bba257d9325739d3090f1f0eb41b3211b4f36f529f24934b44c7e570e3f72b686fc1b486b4e6c29369d58cbae4857d027e311ab2f7a3117fcb48408",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/tabs/tab1-home/tab1.module.ts",
            "methods": [],
            "sourceCode": "import {IonicModule} from '@ionic/angular';\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {Tab1Page} from './tab1.page';\n\nimport {Tab1PageRoutingModule} from './tab1-routing.module';\nimport {TranslateModule} from '@ngx-translate/core';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    Tab1PageRoutingModule,\n    TranslateModule\n  ],\n  declarations: [Tab1Page]\n})\nexport class Tab1PageModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "Tab1Page"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "Tab1PageRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "Tab1PageRoutingModule",
            "id": "module-Tab1PageRoutingModule-2a09c4b7e73c64651454ce2147d1dd38ba90323c7301c6ce814d6507f2dcaad9ec36c4046d0c23cdfd78fe420b41ea900adebc343e7a05f8298354146d474527",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/tabs/tab1-home/tab1-routing.module.ts",
            "methods": [],
            "sourceCode": "import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {Tab1Page} from './tab1.page';\n\nconst routes: Routes = [{\n  path: '',\n  component: Tab1Page,\n}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class Tab1PageRoutingModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "Tab2PageModule",
            "id": "module-Tab2PageModule-7fcfb113aef909912d0391a234f169a1b7c0f495c309b1f4eef24a87aa8afdb008c341aaef144e9c1c640c422259d86f95a520462d78e24ecf9436dedd1fc613",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/tabs/tab2-search/tab2.module.ts",
            "methods": [],
            "sourceCode": "import { IonicModule } from '@ionic/angular';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Tab2Page } from './tab2.page';\n\nimport { Tab2PageRoutingModule } from './tab2-routing.module';\nimport {TranslateModule} from '@ngx-translate/core';\n\n@NgModule({\n    imports: [\n        IonicModule,\n        CommonModule,\n        FormsModule,\n        Tab2PageRoutingModule,\n        TranslateModule\n    ],\n  declarations: [Tab2Page]\n})\nexport class Tab2PageModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "Tab2Page"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "Tab2PageRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "Tab2PageRoutingModule",
            "id": "module-Tab2PageRoutingModule-84d5322e066e01bc650acace56c099860bfd5d3bf6b0697ea5ca581d0916be5032603ab86a434958767d2e3be0e7e1adf003f77f2840d888ed15a0f4a012363d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/tabs/tab2-search/tab2-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { Tab2Page } from './tab2.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: Tab2Page,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class Tab2PageRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "Tab3PageModule",
            "id": "module-Tab3PageModule-9935c58d8649b9f803faf627796f73fd1d996165d29cfbd9379f8ec1fbdf59f18085781f4e16b7d92649c496da3f06623ae1bc7dae332ccba08143ee30747379",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/tabs/tab3-categories/tab3.module.ts",
            "methods": [],
            "sourceCode": "import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Tab3Page } from './tab3.page';\n\nimport { Tab3PageRoutingModule } from './tab3-routing.module';\nimport {TranslateModule} from '@ngx-translate/core';\n\n@NgModule({\n    imports: [\n        IonicModule,\n        CommonModule,\n        FormsModule,\n        RouterModule.forChild([{path: '', component: Tab3Page}]),\n        Tab3PageRoutingModule,\n        TranslateModule,\n    ],\n  declarations: [Tab3Page]\n})\nexport class Tab3PageModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "Tab3Page"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "Tab3PageRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "Tab3PageRoutingModule",
            "id": "module-Tab3PageRoutingModule-8ec9fd9bc9d28ab6a0a9b992b0ab3203aa3a7d8b0680b47010cb4e4941769bff52c70345e54f394fb06559b44187fc33c7d29b784d0e183e931ed7ed1cf4e154",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/tabs/tab3-categories/tab3-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { Tab3Page } from './tab3.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: Tab3Page,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class Tab3PageRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "Tab4PageModule",
            "id": "module-Tab4PageModule-9c9300659930c9fe7ab88d0c9d69d997619a0aeb2918bafb87c9e11712c162a052e260b7aaafa8f9d3d59ede9794d201a187896897189f9769c24fb5bfd3efe3",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/tabs/tab4-profile/tab4.module.ts",
            "methods": [],
            "sourceCode": "import { IonicModule } from '@ionic/angular';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Tab4Page } from './tab4.page';\n\nimport { Tab4PageRoutingModule } from './tab4-routing.module';\nimport {TranslateModule} from '@ngx-translate/core';\n\n@NgModule({\n    imports: [\n        IonicModule,\n        CommonModule,\n        FormsModule,\n        Tab4PageRoutingModule,\n        TranslateModule\n    ],\n  declarations: [Tab4Page]\n})\nexport class Tab4PageModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "Tab4Page"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "Tab4PageRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "Tab4PageRoutingModule",
            "id": "module-Tab4PageRoutingModule-bf3925d85d14316766d04b427d67b49a4ee0f894a524a224a3f9e3018a5364e8025b38fa9ac447f03b5c8733cd415d5a637dc21899179403a1e2a7bde702ab1f",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/tabs/tab4-profile/tab4-routing.module.ts",
            "methods": [],
            "sourceCode": "import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {Tab4Page} from './tab4.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: Tab4Page,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class Tab4PageRoutingModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TabsPageModule",
            "id": "module-TabsPageModule-c3beed0e095920f253d4a6ececbcbc20756bd30e1f9153b63004a35f12d073f52705a5db1d46769cec9755ce9bb709051a4b5c29cfa00afe41363eda9d04861c",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/tabs/tabs.module.ts",
            "methods": [],
            "sourceCode": "import {IonicModule} from '@ionic/angular';\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {TranslateModule} from '@ngx-translate/core';\n\nimport {TabsPageRoutingModule} from './tabs-routing.module';\nimport {TabsPage} from './tabs.page';\nimport {RouterModule} from '@angular/router';\n\n@NgModule({\n  imports: [\n    RouterModule,\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    TabsPageRoutingModule,\n    TranslateModule\n  ],\n  exports: [RouterModule],\n  declarations: [TabsPage]\n})\nexport class TabsPageModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "TabsPage"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "TabsPageRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TabsPageRoutingModule",
            "id": "module-TabsPageRoutingModule-e786f0c13ff97aada4995345d8a4b9f4de3e24f95400eb68b97e7a750746bb5defab327a090237109d53a040eaa9fcd7659d084895bd4fc52d4fdf1fd616b6d5",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/tabs/tabs-routing.module.ts",
            "methods": [],
            "sourceCode": "import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {TabsPage} from './tabs.page';\n\nconst routes: Routes = [\n  {\n    path: 'tabs',\n    component: TabsPage,\n    children: [\n      {\n        path: 'home',\n        loadChildren: () => \"import('./tab1-home/tab1.module').then(m => m.Tab1PageModule)\"\n      },\n      {\n        path: 'search',\n        loadChildren: () => \"import('./tab2-search/tab2.module').then(m => m.Tab2PageModule)\"\n      },\n      {\n        path: 'categories',\n        loadChildren: () => \"import('./tab3-categories/tab3.module').then(m => m.Tab3PageModule)\"\n      },\n      {\n        path: 'profile',\n        loadChildren: () => \"import('./tab4-profile/tab4.module').then(m => m.Tab4PageModule)\"\n      },\n      {\n        path: '',\n        redirectTo: '/tabs/home',\n        pathMatch: 'full'\n      }\n    ]\n  },\n  {\n    path: '',\n    redirectTo: '/tabs/home',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n})\nexport class TabsPageRoutingModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "addPropertyChildren",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/add-property/add-property-routing.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[{\n  path: AddPropertyScreen.location,\n  component: AddLocationComponent\n}, {\n  path: AddPropertyScreen.propertyDetails,\n  component: AddPropertyDetailsComponent\n}, {\n  path: AddPropertyScreen.roomDetails,\n  component: AddRoomDetailsComponent\n}, {\n  path: AddPropertyScreen.media,\n  component: AddMediaComponent\n}, {\n  path: AddPropertyScreen.priceAndAgreement,\n  component: AddPriceAndAgreementComponent\n}, {\n  path: AddPropertyScreen.openDoorEvent,\n  component: AddOpenDoorEventComponent\n}, {\n  path: '',\n  redirectTo: AddPropertyScreen.location,\n  pathMatch: 'full'\n}]"
            },
            {
                "name": "All",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/text/text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "TemplateAll.bind({})"
            },
            {
                "name": "categories",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/categories/categories.data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ICategory[]",
                "defaultValue": "[{\n  icon: 'home-outline',\n  title: 'APARTMENT',\n}, {\n  icon: 'home-outline',\n  title: 'LAND',\n}, {\n  icon: 'home-outline',\n  title: 'PENTHOUSE',\n}, {\n  icon: 'home-outline',\n  title: 'CONDO',\n}, {\n  icon: 'home-outline',\n  title: 'HOUSE',\n},\n  {\n    icon: 'home-outline',\n    title: 'CLINIC',\n  },\n  {\n    icon: 'home-outline',\n    title: 'BASEMENT',\n  },\n  {\n    icon: 'home-outline',\n    title: 'OFFICE',\n  },\n  {\n    icon: 'home-outline',\n    title: 'DUPLEX_APARTMENT',\n  },\n  {\n    icon: 'home-outline',\n    title: 'DUPLEX_HOUSE',\n  },\n  {\n    icon: 'home-outline',\n    title: 'TOWN_HOUSE',\n  },\n  {\n    icon: 'home-outline',\n    title: 'COMMUNITY_CENTER',\n  }\n]"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "DangerBar",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/progress-bar/progress-bar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/button-list/button-list.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/plus-minus-toggle/plus-minus.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/radio-button/radio-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/select-input/select-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/switch-toggle/switch-toggle.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/upload-media-button/upload-media-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Description",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/text/text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Email",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.hmr.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false,\n  hmr: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true,\n  hmr: false\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false,\n  hmr: false\n}"
            },
            {
                "name": "fakeHouses",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/mocks/propertiesData.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[]"
            },
            {
                "name": "File",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "generateProperties",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/mocks/propertiesData.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => {\n  for (let i = 0; i < PROPERTIES_COUNT; i++) {\n    fakeHouses.push({\n      uuid: faker.random.uuid(),\n      pic: faker.image.city(),\n      price: faker.random.number({min: 350000, max: 10000000}),\n      agent: faker.name.findName(),\n      deposit: faker.random.number({min: 10, max: 30}) + \"%\",\n      hasAlert: faker.random.boolean(),\n      rating: faker.random.number({min: 1, max: 5}),\n      floor: faker.random.number({min: 1, max: 150}),\n      square: faker.random.number({min: 1, max: 150}),\n      bedrooms: faker.random.number({min: 1, max: 4}),\n      bathrooms: faker.random.number({min: 1, max: 4}),\n      popularity: faker.random.arrayElement([\n        PopularityEnum.Low,\n        PopularityEnum.Medium,\n        PopularityEnum.High,\n      ]),\n      squareUnits: faker.random.arrayElement([\n        SquareUnitsEnum.Meters,\n        SquareUnitsEnum.Feets,\n      ]),\n      updatedAt: faker.date.past(),\n      address:\n        faker.address.streetAddress() +\n        \", \" +\n        faker.address.countryCode() +\n        \" \" +\n        faker.address.zipCode() +\n        \", \" +\n        faker.address.country(),\n    });\n  }\n  return {\n    total_count: PROPERTIES_COUNT,\n    incomplete_results: false,\n    data: fakeHouses,\n  };\n}"
            },
            {
                "name": "Header",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/text/text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "HorizontalBottom",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/progress-bar/progress-bar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "HorizontalTop",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/progress-bar/progress-bar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "images",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/tabs/tab1-home/tab1.page.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  'bandit',\n  'batmobile',\n  'blues-brothers',\n  'bueller',\n  'delorean',\n  'eleanor',\n  'general-lee',\n  'ghostbusters',\n  'knight-rider',\n  'mirth-mobile'\n]"
            },
            {
                "name": "images",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/tabs/tab3-categories/tab3.page.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  'bandit',\n  'batmobile',\n  'blues-brothers',\n  'bueller',\n  'delorean',\n  'eleanor',\n  'general-lee',\n  'ghostbusters',\n  'knight-rider',\n  'mirth-mobile'\n]"
            },
            {
                "name": "InputTextArea",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/input-textarea/input-textarea.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "invalidSteps",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/progress-bar/progress-bar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "IProgressBarStep[]",
                "defaultValue": "[\n  {\n    state: StateType.submitted,\n  },\n  {\n    state: StateType.submitted,\n  },\n  {\n    state: StateType.invalid,\n  },\n  {\n    state: StateType.invalid,\n  },\n  {},\n  {}\n]"
            },
            {
                "name": "lorem",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/tabs/tab1-home/tab1.page.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'Lorem ipsum dolor sit amet, consectetur adipiscing elit, seddo eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.'"
            },
            {
                "name": "lorem",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/tabs/tab3-categories/tab3.page.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'Lorem ipsum dolor sit amet, consectetur adipiscing elit, seddo eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.'"
            },
            {
                "name": "Many",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/categories/categories.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "NumberMinMax",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "openCycleMapUrl",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/map/map.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'http://{s}.tile.opencyclemap.org/cycle/{z}/{x}/{y}.png'"
            },
            {
                "name": "openStreetMapUrl",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/map/map.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'"
            },
            {
                "name": "Password",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "PROPERTIES_COUNT",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/mocks/propertiesData.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "10"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "rotateImg",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/tabs/tab1-home/tab1.page.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "0"
            },
            {
                "name": "rotateImg",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/tabs/tab3-categories/tab3.page.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "0"
            },
            {
                "name": "Search",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SectionTitle",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/text/text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "steps",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/progress-bar/progress-bar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "IProgressBarStep[]",
                "defaultValue": "[\n  {\n    title: 'First',\n    state: StateType.submitted,\n  },\n  {\n    title: 'Second',\n    state: StateType.submitted,\n  },\n  {\n    title: 'Third',\n    state: StateType.submitted,\n  },\n  {\n    title: 'Third',\n    state: StateType.submitted,\n  },\n  {\n    title: 'Fifth',\n  },\n  {\n    title: 'Fifth',\n  }\n]"
            },
            {
                "name": "Telephone",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/button-list/button-list.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ButtonListComponent>",
                "defaultValue": "(args: ButtonListComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/categories/categories.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<CategoriesComponent>",
                "defaultValue": "(args: CategoriesComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<CheckboxComponent>",
                "defaultValue": "(args: CheckboxComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<InputComponent>",
                "defaultValue": "(args: InputComponent) => ({\n  props: args\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/input-textarea/input-textarea.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<InputTextAreaComponent>",
                "defaultValue": "(args: InputTextAreaComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/plus-minus-toggle/plus-minus.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<PlusMinusToggleComponent>",
                "defaultValue": "(args: PlusMinusToggleComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/radio-button/radio-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<RadioButtonComponent>",
                "defaultValue": "(args: RadioButtonComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/progress-bar/progress-bar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ProgressBarComponent>",
                "defaultValue": "(args: ProgressBarComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/select-input/select-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<SelectInputComponent>",
                "defaultValue": "(args: SelectInputComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/switch-toggle/switch-toggle.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<SwitchToggleComponent>",
                "defaultValue": "(args: SwitchToggleComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/text/text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<TextComponent>",
                "defaultValue": "(args: TextComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/upload-media-button/upload-media-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<UploadMediaButtonComponent>",
                "defaultValue": "(args: UploadMediaButtonComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "TemplateAll",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/text/text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<TextComponent>",
                "defaultValue": "(args: TextComponent) => ({\n  props: args,\n  template: `<div style=\"display: flex; flex-direction: column; margin: 1rem\">\n             <mx-text style=\"padding: 0.5rem\" [title]=\"Header.title\" [type]=\"Header.type\"></mx-text>\n             <mx-text style=\"padding: 0.5rem\" [title]=\"SectionTitle.title\" [type]=\"SectionTitle.type\"></mx-text>\n             <mx-text style=\"padding: 0.5rem\" [title]=\"Title.title\" [type]=\"Title.type\"></mx-text>\n             <mx-text style=\"padding: 0.5rem\" [title]=\"Description.title\" [type]=\"Description.type\"></mx-text>\n            </div>`\n})"
            },
            {
                "name": "Text",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "TextWithIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Title",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/text/text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({\n  title: 'Title',\n  type: TextType.title,\n  color: Color.dark\n})"
            }
        ],
        "functions": [
            {
                "name": "getImgSrc",
                "file": "src/app/tabs/tab1-home/tab1.page.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "getImgSrc",
                "file": "src/app/tabs/tab3-categories/tab3.page.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "HttpLoaderFactory",
                "file": "src/app/app.module.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [],
        "enumerations": [
            {
                "name": "AddPropertyScreen",
                "childs": [
                    {
                        "name": "location",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "location"
                    },
                    {
                        "name": "propertyDetails",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "propertyDetails"
                    },
                    {
                        "name": "roomDetails",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "roomDetails"
                    },
                    {
                        "name": "media",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "media"
                    },
                    {
                        "name": "priceAndAgreement",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "priceAndAgreement"
                    },
                    {
                        "name": "openDoorEvent",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "openDoorEvent"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/add-property/add-property.component.ts"
            },
            {
                "name": "Color",
                "childs": [
                    {
                        "name": "primary",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "#ef7e05"
                    },
                    {
                        "name": "primaryLight",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "#9AE7FF"
                    },
                    {
                        "name": "secondary",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "#8BC7FF"
                    },
                    {
                        "name": "tertiary",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "#5260ff"
                    },
                    {
                        "name": "success",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "#2dc86b"
                    },
                    {
                        "name": "warning",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "#fff309"
                    },
                    {
                        "name": "danger",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "#ff2626"
                    },
                    {
                        "name": "dark",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "#222428"
                    },
                    {
                        "name": "medium",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "#92949c"
                    },
                    {
                        "name": "light",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "#f4f5f8"
                    },
                    {
                        "name": "white",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "#ffffff"
                    },
                    {
                        "name": "transparent",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "transparent"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/shared/enums.ts"
            },
            {
                "name": "IconSize",
                "childs": [
                    {
                        "name": "tiny",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "12"
                    },
                    {
                        "name": "small",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "14"
                    },
                    {
                        "name": "normal",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "16"
                    },
                    {
                        "name": "big",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "20"
                    },
                    {
                        "name": "large",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "24"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/shared/enums.ts"
            },
            {
                "name": "InputAreaMode",
                "childs": [
                    {
                        "name": "decimal",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "decimal"
                    },
                    {
                        "name": "email",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "email"
                    },
                    {
                        "name": "none",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "none"
                    },
                    {
                        "name": "numeric",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "numeric"
                    },
                    {
                        "name": "search",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "search"
                    },
                    {
                        "name": "tel",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "tel"
                    },
                    {
                        "name": "text",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "text"
                    },
                    {
                        "name": "url",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "url"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/shared/components/input-textarea/input-textarea.component.ts"
            },
            {
                "name": "InputAreaModeType",
                "childs": [
                    {
                        "name": "ios",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": " ios"
                    },
                    {
                        "name": "md",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "md"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/shared/components/input-textarea/input-textarea.component.ts"
            },
            {
                "name": "InputType",
                "childs": [
                    {
                        "name": "date",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "date"
                    },
                    {
                        "name": "datetime",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "datetime-local"
                    },
                    {
                        "name": "email",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "email"
                    },
                    {
                        "name": "month",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "month"
                    },
                    {
                        "name": "numberType",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "number"
                    },
                    {
                        "name": "password",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "password"
                    },
                    {
                        "name": "search",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "search"
                    },
                    {
                        "name": "tel",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "tel"
                    },
                    {
                        "name": "text",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "text"
                    },
                    {
                        "name": "file",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "file"
                    },
                    {
                        "name": "time",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "time"
                    },
                    {
                        "name": "url",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "url"
                    },
                    {
                        "name": "week",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "week"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/shared/components/input/input.component.ts"
            },
            {
                "name": "PlatformEum",
                "childs": [
                    {
                        "name": "IOS",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "ANDROID",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "WINDOWS",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "LINUX",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "MACOS",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "BLACKBERRY",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "OTHER",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/shared/enums.ts"
            },
            {
                "name": "PopularityEnum",
                "childs": [
                    {
                        "name": "Low",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "Medium",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "High",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/shared/enums.ts"
            },
            {
                "name": "ProgressBarPosition",
                "childs": [
                    {
                        "name": "horizontalTop",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "top"
                    },
                    {
                        "name": "horizontalBottom",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "bottom"
                    },
                    {
                        "name": "verticalLeft",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "left"
                    },
                    {
                        "name": "verticalRight",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "right"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/shared/components/progress-bar/progress-bar.component.ts"
            },
            {
                "name": "PropertyCategoryEnum",
                "childs": [
                    {
                        "name": "Houses",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "Apartments",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "Condos",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "Buildings",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "TownHouses",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "RecentlySold",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "RecenltyAdded",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "Land",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/shared/enums.ts"
            },
            {
                "name": "PropertyStatusEnum",
                "childs": [
                    {
                        "name": "ForSale",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "ForRent",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/shared/enums.ts"
            },
            {
                "name": "PropertyType",
                "childs": [
                    {
                        "name": "Sell",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "sell"
                    },
                    {
                        "name": "Buy",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "buy"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/shared/interfaces/property.interface.ts"
            },
            {
                "name": "RoleEnum",
                "childs": [
                    {
                        "name": "ADMIN",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "AGENT",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "USER",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/shared/enums.ts"
            },
            {
                "name": "SquareUnitsEnum",
                "childs": [
                    {
                        "name": "Meters",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "Feets",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/shared/enums.ts"
            },
            {
                "name": "StateType",
                "childs": [
                    {
                        "name": "initial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "initial"
                    },
                    {
                        "name": "submitted",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "submitted"
                    },
                    {
                        "name": "invalid",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "invalid"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/shared/services/state.service.ts"
            },
            {
                "name": "TextType",
                "childs": [
                    {
                        "name": "header",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "header"
                    },
                    {
                        "name": "title",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "title"
                    },
                    {
                        "name": "button",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "button"
                    },
                    {
                        "name": "sectionTitle",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "sectionTitle"
                    },
                    {
                        "name": "description",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "description"
                    },
                    {
                        "name": "label",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "label"
                    },
                    {
                        "name": "placeholder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "placeholder"
                    },
                    {
                        "name": "segment",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "segment"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/shared/components/text/text.component.ts"
            }
        ],
        "groupedVariables": {
            "src/app/add-property/add-property-routing.module.ts": [
                {
                    "name": "addPropertyChildren",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/add-property/add-property-routing.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[{\n  path: AddPropertyScreen.location,\n  component: AddLocationComponent\n}, {\n  path: AddPropertyScreen.propertyDetails,\n  component: AddPropertyDetailsComponent\n}, {\n  path: AddPropertyScreen.roomDetails,\n  component: AddRoomDetailsComponent\n}, {\n  path: AddPropertyScreen.media,\n  component: AddMediaComponent\n}, {\n  path: AddPropertyScreen.priceAndAgreement,\n  component: AddPriceAndAgreementComponent\n}, {\n  path: AddPropertyScreen.openDoorEvent,\n  component: AddOpenDoorEventComponent\n}, {\n  path: '',\n  redirectTo: AddPropertyScreen.location,\n  pathMatch: 'full'\n}]"
                }
            ],
            "src/app/shared/components/text/text.stories.ts": [
                {
                    "name": "All",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/text/text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "TemplateAll.bind({})"
                },
                {
                    "name": "Description",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/text/text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Header",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/text/text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SectionTitle",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/text/text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/text/text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<TextComponent>",
                    "defaultValue": "(args: TextComponent) => ({\n  props: args,\n})"
                },
                {
                    "name": "TemplateAll",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/text/text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<TextComponent>",
                    "defaultValue": "(args: TextComponent) => ({\n  props: args,\n  template: `<div style=\"display: flex; flex-direction: column; margin: 1rem\">\n             <mx-text style=\"padding: 0.5rem\" [title]=\"Header.title\" [type]=\"Header.type\"></mx-text>\n             <mx-text style=\"padding: 0.5rem\" [title]=\"SectionTitle.title\" [type]=\"SectionTitle.type\"></mx-text>\n             <mx-text style=\"padding: 0.5rem\" [title]=\"Title.title\" [type]=\"Title.type\"></mx-text>\n             <mx-text style=\"padding: 0.5rem\" [title]=\"Description.title\" [type]=\"Description.type\"></mx-text>\n            </div>`\n})"
                },
                {
                    "name": "Title",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/text/text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({\n  title: 'Title',\n  type: TextType.title,\n  color: Color.dark\n})"
                }
            ],
            "src/app/shared/components/categories/categories.data.ts": [
                {
                    "name": "categories",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/categories/categories.data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ICategory[]",
                    "defaultValue": "[{\n  icon: 'home-outline',\n  title: 'APARTMENT',\n}, {\n  icon: 'home-outline',\n  title: 'LAND',\n}, {\n  icon: 'home-outline',\n  title: 'PENTHOUSE',\n}, {\n  icon: 'home-outline',\n  title: 'CONDO',\n}, {\n  icon: 'home-outline',\n  title: 'HOUSE',\n},\n  {\n    icon: 'home-outline',\n    title: 'CLINIC',\n  },\n  {\n    icon: 'home-outline',\n    title: 'BASEMENT',\n  },\n  {\n    icon: 'home-outline',\n    title: 'OFFICE',\n  },\n  {\n    icon: 'home-outline',\n    title: 'DUPLEX_APARTMENT',\n  },\n  {\n    icon: 'home-outline',\n    title: 'DUPLEX_HOUSE',\n  },\n  {\n    icon: 'home-outline',\n    title: 'TOWN_HOUSE',\n  },\n  {\n    icon: 'home-outline',\n    title: 'COMMUNITY_CENTER',\n  }\n]"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/app/shared/components/progress-bar/progress-bar.stories.ts": [
                {
                    "name": "DangerBar",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/progress-bar/progress-bar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "HorizontalBottom",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/progress-bar/progress-bar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "HorizontalTop",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/progress-bar/progress-bar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "invalidSteps",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/progress-bar/progress-bar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IProgressBarStep[]",
                    "defaultValue": "[\n  {\n    state: StateType.submitted,\n  },\n  {\n    state: StateType.submitted,\n  },\n  {\n    state: StateType.invalid,\n  },\n  {\n    state: StateType.invalid,\n  },\n  {},\n  {}\n]"
                },
                {
                    "name": "steps",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/progress-bar/progress-bar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IProgressBarStep[]",
                    "defaultValue": "[\n  {\n    title: 'First',\n    state: StateType.submitted,\n  },\n  {\n    title: 'Second',\n    state: StateType.submitted,\n  },\n  {\n    title: 'Third',\n    state: StateType.submitted,\n  },\n  {\n    title: 'Third',\n    state: StateType.submitted,\n  },\n  {\n    title: 'Fifth',\n  },\n  {\n    title: 'Fifth',\n  }\n]"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/progress-bar/progress-bar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ProgressBarComponent>",
                    "defaultValue": "(args: ProgressBarComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/app/shared/components/button-list/button-list.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/button-list/button-list.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/button-list/button-list.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ButtonListComponent>",
                    "defaultValue": "(args: ButtonListComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/app/shared/components/checkbox/checkbox.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<CheckboxComponent>",
                    "defaultValue": "(args: CheckboxComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/app/shared/components/plus-minus-toggle/plus-minus.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/plus-minus-toggle/plus-minus.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/plus-minus-toggle/plus-minus.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<PlusMinusToggleComponent>",
                    "defaultValue": "(args: PlusMinusToggleComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/app/shared/components/radio-button/radio-button.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/radio-button/radio-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/radio-button/radio-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<RadioButtonComponent>",
                    "defaultValue": "(args: RadioButtonComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/app/shared/components/select-input/select-input.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/select-input/select-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/select-input/select-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<SelectInputComponent>",
                    "defaultValue": "(args: SelectInputComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/app/shared/components/switch-toggle/switch-toggle.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/switch-toggle/switch-toggle.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/switch-toggle/switch-toggle.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<SwitchToggleComponent>",
                    "defaultValue": "(args: SwitchToggleComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/app/shared/components/upload-media-button/upload-media-button.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/upload-media-button/upload-media-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/upload-media-button/upload-media-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<UploadMediaButtonComponent>",
                    "defaultValue": "(args: UploadMediaButtonComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/app/shared/components/input/input.stories.ts": [
                {
                    "name": "Email",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "File",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "NumberMinMax",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Password",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Search",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Telephone",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<InputComponent>",
                    "defaultValue": "(args: InputComponent) => ({\n  props: args\n})"
                },
                {
                    "name": "Text",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "TextWithIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/environments/environment.hmr.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.hmr.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n  hmr: true\n}"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true,\n  hmr: false\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n  hmr: false\n}"
                }
            ],
            "src/app/shared/mocks/propertiesData.ts": [
                {
                    "name": "fakeHouses",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/mocks/propertiesData.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[]"
                },
                {
                    "name": "generateProperties",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/mocks/propertiesData.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => {\n  for (let i = 0; i < PROPERTIES_COUNT; i++) {\n    fakeHouses.push({\n      uuid: faker.random.uuid(),\n      pic: faker.image.city(),\n      price: faker.random.number({min: 350000, max: 10000000}),\n      agent: faker.name.findName(),\n      deposit: faker.random.number({min: 10, max: 30}) + \"%\",\n      hasAlert: faker.random.boolean(),\n      rating: faker.random.number({min: 1, max: 5}),\n      floor: faker.random.number({min: 1, max: 150}),\n      square: faker.random.number({min: 1, max: 150}),\n      bedrooms: faker.random.number({min: 1, max: 4}),\n      bathrooms: faker.random.number({min: 1, max: 4}),\n      popularity: faker.random.arrayElement([\n        PopularityEnum.Low,\n        PopularityEnum.Medium,\n        PopularityEnum.High,\n      ]),\n      squareUnits: faker.random.arrayElement([\n        SquareUnitsEnum.Meters,\n        SquareUnitsEnum.Feets,\n      ]),\n      updatedAt: faker.date.past(),\n      address:\n        faker.address.streetAddress() +\n        \", \" +\n        faker.address.countryCode() +\n        \" \" +\n        faker.address.zipCode() +\n        \", \" +\n        faker.address.country(),\n    });\n  }\n  return {\n    total_count: PROPERTIES_COUNT,\n    incomplete_results: false,\n    data: fakeHouses,\n  };\n}"
                },
                {
                    "name": "PROPERTIES_COUNT",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/mocks/propertiesData.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "10"
                }
            ],
            "src/app/tabs/tab1-home/tab1.page.ts": [
                {
                    "name": "images",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/tabs/tab1-home/tab1.page.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  'bandit',\n  'batmobile',\n  'blues-brothers',\n  'bueller',\n  'delorean',\n  'eleanor',\n  'general-lee',\n  'ghostbusters',\n  'knight-rider',\n  'mirth-mobile'\n]"
                },
                {
                    "name": "lorem",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/tabs/tab1-home/tab1.page.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'Lorem ipsum dolor sit amet, consectetur adipiscing elit, seddo eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.'"
                },
                {
                    "name": "rotateImg",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/tabs/tab1-home/tab1.page.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "0"
                }
            ],
            "src/app/tabs/tab3-categories/tab3.page.ts": [
                {
                    "name": "images",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/tabs/tab3-categories/tab3.page.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  'bandit',\n  'batmobile',\n  'blues-brothers',\n  'bueller',\n  'delorean',\n  'eleanor',\n  'general-lee',\n  'ghostbusters',\n  'knight-rider',\n  'mirth-mobile'\n]"
                },
                {
                    "name": "lorem",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/tabs/tab3-categories/tab3.page.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'Lorem ipsum dolor sit amet, consectetur adipiscing elit, seddo eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.'"
                },
                {
                    "name": "rotateImg",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/tabs/tab3-categories/tab3.page.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "0"
                }
            ],
            "src/app/shared/components/input-textarea/input-textarea.stories.ts": [
                {
                    "name": "InputTextArea",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/input-textarea/input-textarea.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/input-textarea/input-textarea.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<InputTextAreaComponent>",
                    "defaultValue": "(args: InputTextAreaComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/app/shared/components/categories/categories.stories.ts": [
                {
                    "name": "Many",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/categories/categories.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/categories/categories.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<CategoriesComponent>",
                    "defaultValue": "(args: CategoriesComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/app/map/map.component.ts": [
                {
                    "name": "openCycleMapUrl",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/map/map.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'http://{s}.tile.opencyclemap.org/cycle/{z}/{x}/{y}.png'"
                },
                {
                    "name": "openStreetMapUrl",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/map/map.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/tabs/tab1-home/tab1.page.ts": [
                {
                    "name": "getImgSrc",
                    "file": "src/app/tabs/tab1-home/tab1.page.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ],
            "src/app/tabs/tab3-categories/tab3.page.ts": [
                {
                    "name": "getImgSrc",
                    "file": "src/app/tabs/tab3-categories/tab3.page.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ],
            "src/app/app.module.ts": [
                {
                    "name": "HttpLoaderFactory",
                    "file": "src/app/app.module.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "http",
                            "type": "HttpClient",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "http",
                            "type": "HttpClient",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {
            "src/app/add-property/add-property.component.ts": [
                {
                    "name": "AddPropertyScreen",
                    "childs": [
                        {
                            "name": "location",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "location"
                        },
                        {
                            "name": "propertyDetails",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "propertyDetails"
                        },
                        {
                            "name": "roomDetails",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "roomDetails"
                        },
                        {
                            "name": "media",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "media"
                        },
                        {
                            "name": "priceAndAgreement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "priceAndAgreement"
                        },
                        {
                            "name": "openDoorEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "openDoorEvent"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/add-property/add-property.component.ts"
                }
            ],
            "src/app/shared/enums.ts": [
                {
                    "name": "Color",
                    "childs": [
                        {
                            "name": "primary",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "#ef7e05"
                        },
                        {
                            "name": "primaryLight",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "#9AE7FF"
                        },
                        {
                            "name": "secondary",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "#8BC7FF"
                        },
                        {
                            "name": "tertiary",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "#5260ff"
                        },
                        {
                            "name": "success",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "#2dc86b"
                        },
                        {
                            "name": "warning",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "#fff309"
                        },
                        {
                            "name": "danger",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "#ff2626"
                        },
                        {
                            "name": "dark",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "#222428"
                        },
                        {
                            "name": "medium",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "#92949c"
                        },
                        {
                            "name": "light",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "#f4f5f8"
                        },
                        {
                            "name": "white",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "#ffffff"
                        },
                        {
                            "name": "transparent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "transparent"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/shared/enums.ts"
                },
                {
                    "name": "IconSize",
                    "childs": [
                        {
                            "name": "tiny",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "12"
                        },
                        {
                            "name": "small",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "14"
                        },
                        {
                            "name": "normal",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "16"
                        },
                        {
                            "name": "big",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "20"
                        },
                        {
                            "name": "large",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "24"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/shared/enums.ts"
                },
                {
                    "name": "PlatformEum",
                    "childs": [
                        {
                            "name": "IOS",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "ANDROID",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "WINDOWS",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "LINUX",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "MACOS",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "BLACKBERRY",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "OTHER",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/shared/enums.ts"
                },
                {
                    "name": "PopularityEnum",
                    "childs": [
                        {
                            "name": "Low",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "Medium",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "High",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/shared/enums.ts"
                },
                {
                    "name": "PropertyCategoryEnum",
                    "childs": [
                        {
                            "name": "Houses",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "Apartments",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "Condos",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "Buildings",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "TownHouses",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "RecentlySold",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "RecenltyAdded",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "Land",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/shared/enums.ts"
                },
                {
                    "name": "PropertyStatusEnum",
                    "childs": [
                        {
                            "name": "ForSale",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "ForRent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/shared/enums.ts"
                },
                {
                    "name": "RoleEnum",
                    "childs": [
                        {
                            "name": "ADMIN",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "AGENT",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "USER",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/shared/enums.ts"
                },
                {
                    "name": "SquareUnitsEnum",
                    "childs": [
                        {
                            "name": "Meters",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "Feets",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/shared/enums.ts"
                }
            ],
            "src/app/shared/components/input-textarea/input-textarea.component.ts": [
                {
                    "name": "InputAreaMode",
                    "childs": [
                        {
                            "name": "decimal",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "decimal"
                        },
                        {
                            "name": "email",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "email"
                        },
                        {
                            "name": "none",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "none"
                        },
                        {
                            "name": "numeric",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "numeric"
                        },
                        {
                            "name": "search",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "search"
                        },
                        {
                            "name": "tel",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "tel"
                        },
                        {
                            "name": "text",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "text"
                        },
                        {
                            "name": "url",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "url"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/shared/components/input-textarea/input-textarea.component.ts"
                },
                {
                    "name": "InputAreaModeType",
                    "childs": [
                        {
                            "name": "ios",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": " ios"
                        },
                        {
                            "name": "md",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "md"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/shared/components/input-textarea/input-textarea.component.ts"
                }
            ],
            "src/app/shared/components/input/input.component.ts": [
                {
                    "name": "InputType",
                    "childs": [
                        {
                            "name": "date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "date"
                        },
                        {
                            "name": "datetime",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "datetime-local"
                        },
                        {
                            "name": "email",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "email"
                        },
                        {
                            "name": "month",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "month"
                        },
                        {
                            "name": "numberType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "number"
                        },
                        {
                            "name": "password",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "password"
                        },
                        {
                            "name": "search",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "search"
                        },
                        {
                            "name": "tel",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "tel"
                        },
                        {
                            "name": "text",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "text"
                        },
                        {
                            "name": "file",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "file"
                        },
                        {
                            "name": "time",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "time"
                        },
                        {
                            "name": "url",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "url"
                        },
                        {
                            "name": "week",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "week"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/shared/components/input/input.component.ts"
                }
            ],
            "src/app/shared/components/progress-bar/progress-bar.component.ts": [
                {
                    "name": "ProgressBarPosition",
                    "childs": [
                        {
                            "name": "horizontalTop",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "top"
                        },
                        {
                            "name": "horizontalBottom",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "bottom"
                        },
                        {
                            "name": "verticalLeft",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "left"
                        },
                        {
                            "name": "verticalRight",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "right"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/shared/components/progress-bar/progress-bar.component.ts"
                }
            ],
            "src/app/shared/interfaces/property.interface.ts": [
                {
                    "name": "PropertyType",
                    "childs": [
                        {
                            "name": "Sell",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "sell"
                        },
                        {
                            "name": "Buy",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "buy"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/shared/interfaces/property.interface.ts"
                }
            ],
            "src/app/shared/services/state.service.ts": [
                {
                    "name": "StateType",
                    "childs": [
                        {
                            "name": "initial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "initial"
                        },
                        {
                            "name": "submitted",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "submitted"
                        },
                        {
                            "name": "invalid",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "invalid"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/shared/services/state.service.ts"
                }
            ],
            "src/app/shared/components/text/text.component.ts": [
                {
                    "name": "TextType",
                    "childs": [
                        {
                            "name": "header",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "header"
                        },
                        {
                            "name": "title",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "title"
                        },
                        {
                            "name": "button",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "button"
                        },
                        {
                            "name": "sectionTitle",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "sectionTitle"
                        },
                        {
                            "name": "description",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "description"
                        },
                        {
                            "name": "label",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "label"
                        },
                        {
                            "name": "placeholder",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "placeholder"
                        },
                        {
                            "name": "segment",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "segment"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/shared/components/text/text.component.ts"
                }
            ]
        },
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "loadChildren": "./tabs/tabs.module#TabsPageModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/tabs/tabs-routing.module.ts",
                                        "module": "TabsPageRoutingModule",
                                        "children": [
                                            {
                                                "path": "tabs",
                                                "component": "TabsPage",
                                                "children": [
                                                    {
                                                        "path": "home",
                                                        "loadChildren": "./tab1-home/tab1.module#Tab1PageModule",
                                                        "children": [
                                                            {
                                                                "kind": "module",
                                                                "children": [
                                                                    {
                                                                        "name": "routes",
                                                                        "filename": "src/app/tabs/tab1-home/tab1-routing.module.ts",
                                                                        "module": "Tab1PageRoutingModule",
                                                                        "children": [
                                                                            {
                                                                                "path": "",
                                                                                "component": "Tab1Page"
                                                                            }
                                                                        ],
                                                                        "kind": "module"
                                                                    }
                                                                ],
                                                                "module": "Tab1PageModule"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "path": "search",
                                                        "loadChildren": "./tab2-search/tab2.module#Tab2PageModule",
                                                        "children": [
                                                            {
                                                                "kind": "module",
                                                                "children": [
                                                                    {
                                                                        "name": "routes",
                                                                        "filename": "src/app/tabs/tab2-search/tab2-routing.module.ts",
                                                                        "module": "Tab2PageRoutingModule",
                                                                        "children": [
                                                                            {
                                                                                "path": "",
                                                                                "component": "Tab2Page"
                                                                            }
                                                                        ],
                                                                        "kind": "module"
                                                                    }
                                                                ],
                                                                "module": "Tab2PageModule"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "path": "categories",
                                                        "loadChildren": "./tab3-categories/tab3.module#Tab3PageModule",
                                                        "children": [
                                                            {
                                                                "kind": "module",
                                                                "children": [
                                                                    {
                                                                        "name": "routes",
                                                                        "filename": "src/app/tabs/tab3-categories/tab3-routing.module.ts",
                                                                        "module": "Tab3PageRoutingModule",
                                                                        "children": [
                                                                            {
                                                                                "path": "",
                                                                                "component": "Tab3Page"
                                                                            }
                                                                        ],
                                                                        "kind": "module"
                                                                    }
                                                                ],
                                                                "module": "Tab3PageModule"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "path": "profile",
                                                        "loadChildren": "./tab4-profile/tab4.module#Tab4PageModule",
                                                        "children": [
                                                            {
                                                                "kind": "module",
                                                                "children": [
                                                                    {
                                                                        "name": "routes",
                                                                        "filename": "src/app/tabs/tab4-profile/tab4-routing.module.ts",
                                                                        "module": "Tab4PageRoutingModule",
                                                                        "children": [
                                                                            {
                                                                                "path": "",
                                                                                "component": "Tab4Page"
                                                                            }
                                                                        ],
                                                                        "kind": "module"
                                                                    }
                                                                ],
                                                                "module": "Tab4PageModule"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "path": "",
                                                        "redirectTo": "/tabs/home",
                                                        "pathMatch": "full"
                                                    }
                                                ]
                                            },
                                            {
                                                "path": "",
                                                "redirectTo": "/tabs/home",
                                                "pathMatch": "full"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "TabsPageModule"
                            }
                        ]
                    },
                    {
                        "path": "addProperty",
                        "loadChildren": "./add-property/add-property.module#AddPropertyModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/add-property/add-property-routing.module.ts",
                                        "module": "AddPropertyRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "AddPropertyComponent",
                                                "children": "addPropertyChildren"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "AddPropertyModule"
                            }
                        ]
                    },
                    {
                        "path": "propertyDetails",
                        "loadChildren": "./property-details/property-details.module#PropertyDetailsModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [],
                                "module": "PropertyDetailsModule"
                            }
                        ]
                    },
                    {
                        "path": "map",
                        "loadChildren": "./map/map.module#MapModule"
                    },
                    {
                        "path": "search-filters",
                        "loadChildren": "./search-filters/search-filters.module#SearchFiltersModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/search-filters/search-filters-routing.module.ts",
                                        "module": "SearchFiltersRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "SearchFiltersComponent",
                                                "children": []
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "SearchFiltersModule"
                            }
                        ]
                    },
                    {
                        "path": "categories",
                        "loadChildren": "./categories/categories.module#CategoriesModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/categories/categories-routing.module.ts",
                                        "module": "CategoriesRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "CategoriesComponent",
                                                "children": []
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "CategoriesModule"
                            }
                        ]
                    },
                    {
                        "path": "profile",
                        "loadChildren": "./profile/profile.module#ProfileModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [],
                                "module": "ProfileModule"
                            }
                        ]
                    }
                ],
                "kind": "module"
            },
            {
                "name": "routes",
                "filename": "src/app/map/map-routing.module.ts",
                "module": "MapRoutingModule",
                "children": [
                    {
                        "path": "",
                        "component": "MapComponent",
                        "children": []
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/add-property/add-location/add-location.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AddLocationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/add-property/add-media/add-media.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AddMediaComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/add-property/add-open-door-event/add-open-door-event.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AddOpenDoorEventComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/add-property/add-price-and-agreement/add-price-and-agreement.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AddPriceAndAgreementComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/add-property/add-property-details/add-property-details.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AddPropertyDetailsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/28",
                "status": "low"
            },
            {
                "filePath": "src/app/add-property/add-property-routing.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "addPropertyChildren",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/add-property/add-property.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AddPropertyComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/add-property/add-room-details/add-room-details.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AddRoomDetailsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/app.module.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "HttpLoaderFactory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/categories/categories.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CategoriesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/map/map.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MapComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/map/map.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "openCycleMapUrl",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/map/map.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "openStreetMapUrl",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/profile/profile.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProfileComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/property-details/property-details.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PropertyDetailsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/search-filters/search-filters.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SearchFiltersComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/button-list/button-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/button-list/button-list.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/button-list/button-list.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/calendar/calendar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CalendarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/categories/categories.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CategoriesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/categories/categories.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ICategory",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/categories/categories.data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "categories",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/categories/categories.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Many",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/categories/categories.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/checkbox/checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/checkbox/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/checkbox/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/input-textarea/input-textarea.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputTextAreaComponent",
                "coveragePercent": 0,
                "coverageCount": "0/25",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/input-textarea/input-textarea.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "InputTextArea",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/input-textarea/input-textarea.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/input/input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/32",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Email",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "File",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NumberMinMax",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Password",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Search",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Telephone",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Text",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TextWithIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/plus-minus-toggle/plus-minus-toggle.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PlusMinusToggleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/plus-minus-toggle/plus-minus.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/plus-minus-toggle/plus-minus.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/progress-bar/progress-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProgressBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/progress-bar/progress-bar.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IClickStepEvent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/progress-bar/progress-bar.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IProgressBarConfig",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/progress-bar/progress-bar.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IProgressBarStep",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/progress-bar/progress-bar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DangerBar",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/progress-bar/progress-bar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HorizontalBottom",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/progress-bar/progress-bar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HorizontalTop",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/progress-bar/progress-bar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "invalidSteps",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/progress-bar/progress-bar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "steps",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/progress-bar/progress-bar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/radio-button/radio-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RadioButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/radio-button/radio-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/radio-button/radio-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/select-input/select-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/select-input/select-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/select-input/select-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/switch-toggle/switch-toggle.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SwitchToggleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/switch-toggle/switch-toggle.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/switch-toggle/switch-toggle.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/text/text.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/text/text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "All",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/text/text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Description",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/text/text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Header",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/text/text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SectionTitle",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/text/text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/text/text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TemplateAll",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/text/text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Title",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/upload-media-button/upload-media-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UploadMediaButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/upload-media-button/upload-media-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/upload-media-button/upload-media-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/address.intefrace.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IAddress",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/category.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ICategory",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/property.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IPropertyDetails",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/property.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IPropertyPreview",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/user.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "UserInterface",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/mocks/propertiesData.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "fakeHouses",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/mocks/propertiesData.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "generateProperties",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/mocks/propertiesData.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PROPERTIES_COUNT",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/state.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "StateService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/tabs/tab1-home/tab1.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "Tab1Page",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/tabs/tab1-home/tab1.page.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "getImgSrc",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/tabs/tab1-home/tab1.page.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "images",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/tabs/tab1-home/tab1.page.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "lorem",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/tabs/tab1-home/tab1.page.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "rotateImg",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/tabs/tab2-search/tab2.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "Tab2Page",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/tabs/tab3-categories/tab3.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "Tab3Page",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/tabs/tab3-categories/tab3.page.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "getImgSrc",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/tabs/tab3-categories/tab3.page.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "images",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/tabs/tab3-categories/tab3.page.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "lorem",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/tabs/tab3-categories/tab3.page.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "rotateImg",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/tabs/tab4-profile/tab4.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "Tab4Page",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/tabs/tabs.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "TabsPage",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.hmr.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/utils.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Utils",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            }
        ]
    }
}